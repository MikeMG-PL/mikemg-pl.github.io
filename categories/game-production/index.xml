













    
        
    

    
        
    

    

    
        
    







    

    






<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"  xml:lang="en-us"  xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        
            

            
                
            

            
                <link href="/categories/game-production/" rel="self" type="text/html"/>
            
        
            

            

            
                <link href="/categories/game-production/index.xml" rel="alternate" type="application/rss+xml"/>
            
        

        

        

        <description></description>

        
            <language>en-us</language>
        

        
            <lastBuildDate>2024-10-01 16:58:35 &#43;0200 CEST</lastBuildDate>
        

        <link>/categories/game-production/</link>

        

        <title>Game Production · Categories · </title>

        

        
            <item>
                
                
                
                
                
                
                

                

                

                

                

                
                

                

                

                
                    <description><![CDATA[<style>

:target:before {
  content: ''
  display: block;
  height: 100px; /* Adjust offset as needed */
  margin-top: -100px; /* Negative value equal to height */
  visibility: hidden;
}

html {
  scroll-behavior: smooth; /* Enable smooth scrolling behavior */
}

</style>
<p>&ldquo;Heartbreaker&rdquo; started as a job interview task I moulded in one weekend. 18 months later, my teammates and I won an award with &ldquo;Heartbreaker&rdquo; during a global gamedev conference, surpassing over a 100 professional indie teams. How did we achieve it?</p>
<h2 id="abstract">Abstract</h2>
<p>This text reflects my experience as a team coordinator/producer/director for the game &ldquo;Heartbreaker.&rdquo; I present loosely gathered thoughts on our multielement, holistic approach to developing this game. I also add my two cents&rsquo; worth in terms of the role of a game producer/director, not only in reference to our game. I believe that the <strong>amazing interdisciplinary team I was pleased to work with</strong> along with the <strong>holistic approach to our project</strong> are the answer to the above question: <em>&ldquo;How did we achieve a success with our game that many gamedev students would dream of?&rdquo;</em>.</p>
<p>Please, remember: opinions I present in this post are my own, they come from my personal experience, discussions with more experienced devs, or quoted sources I find valuable. And keep in mind that despite winning this and that (Best Gameplay at Game Access Conference 2024, Czechia, or Best Game Design at ZTGK Gamedev Contest, Poland), <strong>&ldquo;Heartbreaker&rdquo; also has its flaws</strong>. We do our best to reduce them or to remove some problems entirely, but you need to know that <strong>nothing is perfect</strong> and <strong>not everything was executed perfectly in our game</strong>.</p>
<h2 id="the-challenge-of-becoming-a-producer">The Challenge of Becoming A Producer</h2>
<p>Before sharing production/design tips from my experience with &ldquo;Heartbreaker&rdquo;, I want to highlight that there are two key challenges related to becoming a commercial producer. <strong>I spoke with two experienced game producers</strong> from AA/AA+ studios, and <strong>they confirmed that both of the challenges I present below are real</strong>.</p>
<h3 id="heading"></h3>
<h4 id="some-roles-get-mixed-in-many-studios">Some Roles Get Mixed in Many Studios</h4>
<p>This post also applies to <strong>creative directing</strong> and <strong>game design</strong>. In many studios, <strong>especially indie ones</strong>, one person, often the CEO, handles production and directing. And sometimes even design. It&rsquo;s not a bad thing in every single case, but trust me, I&rsquo;ve seen some destructive examples of this. These overlapping roles make definitions murky, so let me clarify them (at least this is how I view them):</p>
<blockquote><b>Creative director</b> – a supervisor of the overall (macro) vision behind the game. Defines artistic/creative vision and the message it conveys. Ensures that the theme and experience are consistent and the game eventually reaches the overall shape it intended to have.</blockquote>
<blockquote><b>Game producer</b> – a supervisor of time and budget during the development. Ensures that the game is delivered in a&nbsp;realistic timeframe with all resources a studio has. Aims to remove obstacles in front of the developers, serves as a&nbsp;team coordinator and keeps the project on track resource-wise.</blockquote>
<blockquote><b>Game designer</b> – a person responsible for the micro vision of the game, focused on its rules, gameplay, specific sections, systems, levels, and elements that piece by piece build the overall vision a director aims to keep.</blockquote>
<p>Of course, in large studios, these roles can branch off significantly. While the <strong>creative director</strong> role might be relatively atomic, <strong>producers can specialize into many roles</strong> such as technical producers, UI producers, audio producers, and so on. The complexity increases further when seniority levels are applied to these positions. <strong>The same with designers</strong> – there can be narrative, open world, or combat designers. Not only does it depend on the scale of a studio, but also the profile of a game. A D&amp;D-based open world RPG will require different staff than a competitive online FPS.</p>
<p>What&rsquo;s more, when a company wants to hire a producer or director, the terms they use might differ from those used by other studios. For example, in a huge company there might exist two different positions: a <strong>game director</strong> and <strong>creative director</strong>, with one leaning more towards management. In another, there could be no such distinction at all. But fear nothing. If they hire, responsibilities of these roles are often clearly described&hellip; <em><strong>IF they hire&hellip;</strong></em></p>
<h4 id="entry-level-producer-positions-are-rare">Entry-Level Producer Positions Are Rare</h4>
<p>Apart from the current game industry crisis, <strong>it&rsquo;s not easy to find a junior role for a producer</strong>. There&rsquo;s even not really much of a thing like a &ldquo;Junior Producer&rdquo;. It&rsquo;s often sort of a &ldquo;Production Assistant&rdquo; and there are <strong>not many studios that hire one</strong>. This is often because of the internal structure. A production assistant, or an assistant producer, helps with day-to-day production tasks like leading daily meetings, taking notes, setting up additional meetings or supervising less critical aspects of production.</p>
<p>I&rsquo;ve seen cases where new projects began, and lead producers <strong>emerged organically</strong> from experienced designers or developers. Because they were still partially involved in the design/technical development process, they needed someone to assist them production-wise – a production assistant.</p>
<p>I mentioned <strong>&ldquo;emerging organically&rdquo;</strong> and <strong>that&rsquo;s also why there are few entry-level production jobs</strong>. It often happens that someone from the development team, skilled in a particular area and with a knack for management, starts supervising production in that field. This is how roles like technical producers or animation producers often emerge naturally in many companies, even without hiring new staff. So as you can see, there is no direct route towards becoming a producer.</p>
<h2 id="elements-of-production">Elements of Production</h2>
<p>First, I encourage you to get to know <a href="/portfolio/heartbreaker/">“Heartbreaker.”</a> This will help you follow the text more easily. You can even download and try the game yourself.</p>


    
    <div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
      <iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" loading="eager" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/9UdSVbAIhKI?autoplay=0&controls=1&end=0&loop=0&mute=0&start=0" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" title="YouTube video"
      ></iframe>
    </div>

<p>Applying the holistic approach I describe using &ldquo;Heartbreaker&rdquo; as an example depicts, I believe, the role of a game producer in a nutshell: <strong>to notice each part of the creative vision and make it real using the team&rsquo;s resources</strong>. Multiple aspects contribute to the high-quality experience we aim to deliver to players. Let&rsquo;s call these aspects <strong>elements</strong> from now on. For example, when showcasing your game at professional game development events, contests, or conferences, it is crucial that <strong>none of the elements of your game misfit or be of lower quality than the others</strong>. What&rsquo;s more, <strong>all the elements should support each other</strong>.</p>



  



<div class="notice note">
  <div class="notice-head"><svg
        width="20"
        height="20"
        viewBox="0 0 20 20"
        fill="none"
        xmlns="http://www.w3.org/2000/svg">
        <path
          d="M10 9V14M10 19C5.02944 19 1 14.9706 1 10C1 5.02944 5.02944 1 10 1C14.9706 1 19 5.02944 19 10C19 14.9706 14.9706 19 10 19ZM10.0498 6V6.1L9.9502 6.1002V6H10.0498Z"
          stroke="currentColor"
          stroke-width="2"
          stroke-linecap="round"
          stroke-linejoin="round"></path>
      </svg><p>Note</p>
  </div>
  <div class="notice-body"><p>This isn&rsquo;t a prioritized list. While some may debate on what&rsquo;s more important, e.g. story or art style, holistic approach requires considering all elements together so they support each other. <strong>But!</strong> Prioritization and resource allocation are separate issues. Note that it&rsquo;s also impossible to name all the elements and list them here.</p></div>
</div>

<h3 id="heading-1"></h3>
<h4 id="gameplay">Gameplay</h4>
<p>Games are interactive and built around their mechanics and rules, which is why I believe development should start with gameplay. While a creative vision related to a specific theme, story, or art style might come first, <strong>gameplay should be the foundation</strong>. The holistic approach <strong>isn’t</strong> necessarily about treating every element equally, or assigning the same amount of resources to each element, but ensuring they all support each other and are considered together. Based on my experience and consultation with more experienced developers, it’s usually best to begin by focusing on gameplay (not lore, not these 10 pages of backstory you’ve started writing). Rapid prototyping and the <strong>&ldquo;fail fast&rdquo;</strong> approach to testing gameplay are key to this process.</p>
<p><strong>That means</strong>, I encourage you to focus on gameplay as much as possible at the beginning. <strong>That does not mean</strong>, e.g. your artists shouldn&rsquo;t be working on art/story/music elements in that moment.</p>



  



<div class="notice tip">
  <div class="notice-head"><svg
        width="20"
        height="20"
        viewBox="0 0 24 24"
        fill="none"
        xmlns="http://www.w3.org/2000/svg">
        <path
          fillRule="evenodd"
          clipRule="evenodd"
          d="M12 0C18.6274 0 24 5.37258 24 12C24 18.6274 18.6274 24 12 24C5.37258 24 0 18.6274 0 12C0 5.37258 5.37258 0 12 0ZM12 2.4C6.69807 2.4 2.4 6.69807 2.4 12C2.4 17.3019 6.69807 21.6 12 21.6C17.3019 21.6 21.6 17.3019 21.6 12C21.6 6.69807 17.3019 2.4 12 2.4ZM15.9515 7.55147L9.6 13.9029L8.04853 12.3515C7.5799 11.8828 6.8201 11.8828 6.35147 12.3515C5.88284 12.8201 5.88284 13.5799 6.35147 14.0485L8.75147 16.4485C9.2201 16.9172 9.9799 16.9172 10.4485 16.4485L17.6485 9.24853C18.1172 8.7799 18.1172 8.0201 17.6485 7.55147C17.1799 7.08284 16.4201 7.08284 15.9515 7.55147Z"
          fill="currentColor" />
      </svg><p>Tip</p>
  </div>
  <div class="notice-body"><p>Start the development with gameplay – prototype it, iterate, playtest, enhance.</p></div>
</div>

<p>Let&rsquo;s focus on prototyping, as its value is often underestimated. During development, it&rsquo;s crucial to <strong>build a testable and playable version of the most important gameplay mechanics as quickly as possible</strong>. This should be done frequently, especially when you&rsquo;re uncertain about whether your gameplay is fun. Early playtests are crucial for this – if a particular mechanic you&rsquo;re testing &ldquo;clicks,&rdquo; you&rsquo;ll likely receive that feedback from players. If not, players will notice and <strong>offer hints</strong> on why that might be. However, it&rsquo;s important to filter every piece of feedback. You should listen to players and take note of what they mention, but remember that you know the game best. Playtesters may point you in the right direction, but their conclusions about certain aspects of gameplay might be off. <strong>But that’s a topic for another article&hellip;</strong></p>
<hr>
<p>&ldquo;Heartbreaker&rdquo; started as a job interview task but eventually evolved into something entirely different in terms of art and gameplay. I describe it further in section <a href="#the-art-of-defining-scope-and-cutting-things-out">The Art of Defining Scope And Cutting Things Out</a>.</p>
<p>This is why I need to describe the &ldquo;Heartbreaker&rdquo; gameplay from when it crystalized. As an FPP platformer, it&rsquo;s built around the idea of <strong>crashing hearts of stone through dynamic movement</strong>. This works well on the <a href="#theme--story">Theme &amp; Story</a> element but is also a core gameplay mechanic. You use a <strong>dash skill</strong> to crash into opponents&rsquo; hearts in the environment. This concept evolves to later pair your movement with trampolines or new abilities, such as a grappling hook.</p>
<center>





















  
  
  


  
  
    
    
      
    

    


    
    


    
    
    
    
    
    
    


    
    
      
      
      
    
    

    
    
      
      
          <img
            title=""
            loading="lazy"
            decoding="async"
            class="img img-fluid "
            width="570"
            height="323"
            src="/images/posts/post-2/hb.gif"
            alt=""
            onerror="this.onerror='null';this.src=''" />
      
    

  
  






  <script>
    window.addEventListener("load", (e) => {
      const lightbox = GLightbox();
    });
  </script>


         





















  
  
  


  
  
    
    
      
    

    


    
    


    
    
    
    
    
    
    


    
    
      
      
      
    
    

    
    
      
      
          <img
            title=""
            loading="lazy"
            decoding="async"
            class="img img-fluid "
            width="570"
            height="323"
            src="/images/posts/post-2/grapple.gif"
            alt=""
            onerror="this.onerror='null';this.src=''" />
      
    

  
  







</center>
<p>When testing fundamental gameplay mechanics, it&rsquo;s important to <strong>prepare a space that serves your needs</strong>. Typically, this involves creating an extra scene (a level) that is mostly empty but allows for easy enemy spawning or testing other game systems. In &ldquo;Heartbreaker&rdquo;, we call these levels &ldquo;Labs,&rdquo; as they function like a lab for experimenting with gameplay. This approach allows you to <strong>&ldquo;fail fast&rdquo;</strong> and iterate quickly. Additionally, don&rsquo;t underestimate value of creating custom tools for your game.</p>
<center>
<table>
<thead>
<tr>
<th style="text-align:center"><span style="font-size: 30px; font-family: Signika;"><strong>An early prototype of grappling hook skill – tested on a &ldquo;Lab&rdquo; level.</strong></span></th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">




















  
  
  


  
  
    
    
      
    

    


    
    


    
    
    
    
    
    
    


    
    
      
      
      
    
    

    
    
      
      
          <img
            title=""
            loading="lazy"
            decoding="async"
            class="img img-fluid "
            width="570"
            height="323"
            src="/images/posts/post-2/proto.gif"
            alt=""
            onerror="this.onerror='null';this.src=''" />
      
    

  
  






</td>
</tr>
</tbody>
</table>
</center>



  



<div class="notice tip">
  <div class="notice-head"><svg
        width="20"
        height="20"
        viewBox="0 0 24 24"
        fill="none"
        xmlns="http://www.w3.org/2000/svg">
        <path
          fillRule="evenodd"
          clipRule="evenodd"
          d="M12 0C18.6274 0 24 5.37258 24 12C24 18.6274 18.6274 24 12 24C5.37258 24 0 18.6274 0 12C0 5.37258 5.37258 0 12 0ZM12 2.4C6.69807 2.4 2.4 6.69807 2.4 12C2.4 17.3019 6.69807 21.6 12 21.6C17.3019 21.6 21.6 17.3019 21.6 12C21.6 6.69807 17.3019 2.4 12 2.4ZM15.9515 7.55147L9.6 13.9029L8.04853 12.3515C7.5799 11.8828 6.8201 11.8828 6.35147 12.3515C5.88284 12.8201 5.88284 13.5799 6.35147 14.0485L8.75147 16.4485C9.2201 16.9172 9.9799 16.9172 10.4485 16.4485L17.6485 9.24853C18.1172 8.7799 18.1172 8.0201 17.6485 7.55147C17.1799 7.08284 16.4201 7.08284 15.9515 7.55147Z"
          fill="currentColor" />
      </svg><p>Tip</p>
  </div>
  <div class="notice-body"><p>Prepare a comfortable space for developers to prototype, test, and iterate crucial gameplay mechanics. Don&rsquo;t fear creating custom tools.</p></div>
</div>

<h4 id="art-style--graphics">Art Style &amp; Graphics</h4>
<p>Initially, we had two ideas for the art style of &ldquo;Heartbreaker&rdquo;, but neither was connected to the other elements of the game. However, once the <strong>core gameplay</strong> and <strong>lore</strong> emerged, everything began to make a good match.</p>
<p>Those ideas were: <strong>wild west high above the ground</strong> and <strong>geometric abstraction</strong>. We chose the second option, but what we selected isn’t as important as how we connected the art style to the other elements. A relaxing nature of the setting along with holiday and party atmosphere go well with the gameplay – crashing hearts of stone. Players seeing the luxury (but abstract) resort think of: the story that <strong>matches the location</strong>, and gameplay. Viewing the art making up this world reminds the relaxing, slightly unreal atmoshpere of the game, parallel to those &ldquo;meta&rdquo; gameplay mechanics.</p>
<p>Our art style is not just randomly placed low-poly figures. We aimed to build a world that resembles the real one using these figures. <a href="https://www.artstation.com/agatagranosik">Agata</a>, responsible for leading the art direction of &ldquo;Heartbreaker&rdquo;, gathered a lot of references and drew inspiration from postmodern Mediterranean architecture. We blend abstract figures, which build the environment, and emissive elements, that guide players where to go (neons or the wind).</p>
<table>
<thead>
<tr>
<th style="text-align:center"><span style="font-size: 24px; font-family: Signika;"><strong>A screenshot from &ldquo;Heartbreaker&rdquo;</strong></span></th>
<th style="text-align:center"><span style="font-size: 24px;  font-family: Signika;"><strong>La Muralla Roja hotel, a photo I took in Calpe, Spain</strong></span></th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">




















  
  
  


  
  
    
    
      
    

    


    
    


    
    
    
    
    
    
    


    
    
      
      

      


      

      
      
        
        
        
      
      
      
      

    
    

    
    
      
      
          <img
            title=""
            loading="lazy"
            decoding="async"
            class="img img-fluid "
            width="600"
            height="338"
            src="/images/posts/post-2/game_hu1df497f86d17cec5bf16a19b67578555_413119_600x0_resize_q100_h2_lanczos_3.webp"
            alt=""
            onerror="this.onerror='null';this.src='\/images\/posts\/post-2\/game_hu1df497f86d17cec5bf16a19b67578555_413119_600x0_resize_q100_lanczos_3.png'" />
      
    

  
  






</td>
<td style="text-align:center">




















  
  
  


  
  
    
    
      
    

    


    
    


    
    
    
    
    
    
    


    
    
      
      

      


      

      
      
        
        
        
      
      
      
      

    
    

    
    
      
      
          <img
            title=""
            loading="lazy"
            decoding="async"
            class="img img-fluid "
            width="600"
            height="338"
            src="/images/posts/post-2/real_hua723821ed68a2aec74057cddb4173af8_137465_600x0_resize_q100_h2_lanczos.webp"
            alt=""
            onerror="this.onerror='null';this.src='\/images\/posts\/post-2\/real_hua723821ed68a2aec74057cddb4173af8_137465_600x0_resize_q100_lanczos.jpg'" />
      
    

  
  






</td>
</tr>
</tbody>
</table>



  



<div class="notice tip">
  <div class="notice-head"><svg
        width="20"
        height="20"
        viewBox="0 0 24 24"
        fill="none"
        xmlns="http://www.w3.org/2000/svg">
        <path
          fillRule="evenodd"
          clipRule="evenodd"
          d="M12 0C18.6274 0 24 5.37258 24 12C24 18.6274 18.6274 24 12 24C5.37258 24 0 18.6274 0 12C0 5.37258 5.37258 0 12 0ZM12 2.4C6.69807 2.4 2.4 6.69807 2.4 12C2.4 17.3019 6.69807 21.6 12 21.6C17.3019 21.6 21.6 17.3019 21.6 12C21.6 6.69807 17.3019 2.4 12 2.4ZM15.9515 7.55147L9.6 13.9029L8.04853 12.3515C7.5799 11.8828 6.8201 11.8828 6.35147 12.3515C5.88284 12.8201 5.88284 13.5799 6.35147 14.0485L8.75147 16.4485C9.2201 16.9172 9.9799 16.9172 10.4485 16.4485L17.6485 9.24853C18.1172 8.7799 18.1172 8.0201 17.6485 7.55147C17.1799 7.08284 16.4201 7.08284 15.9515 7.55147Z"
          fill="currentColor" />
      </svg><p>Tip</p>
  </div>
  <div class="notice-body"><p>Make art style parallel with gameplay and story. Aim to make players think of your gameplay and story when they look at your game and the reverse.</p></div>
</div>

<h4 id="theme--story">Theme &amp; Story</h4>
<p>Remember my advice about gameplay being the first thing you focus during the development? This is my personal opinion and &ldquo;gameplay first&rdquo; may not apply to every genre. In terms of story, there are indeed titles where it is more important than gameplay, such as &ldquo;Everybody’s Gone to the Rapture&rdquo; or &ldquo;Gone Home&rdquo;. However, <strong>I wish I had known how challenging it would be to create a heavily story-driven adventure</strong> when I started my gamedev journey. This is why I typically recommend young developers, like the students in our university gamedev club, to begin with gameplay. <strong>It&rsquo;s also much easier to build a story around existing gameplay</strong> than to do the reverse.</p>
<p>This is how we approached &ldquo;Heartbreaker&rdquo;: we established a solid gameplay foundation, developed an emerging art style, and built on simple lore and microstory. Both we and the playtesters were happy with the results! This approach also left us plenty of room to expand the story and lore later on.</p>
<p>To support this point, it is the exact approach <a href="https://youtu.be/d9_Isp17KN0?t=590">Valve took during the development of &ldquo;Portal.&rdquo;</a> Valve was extremely impressed by the prototype developed by DigiPen students, and wanted them to finish &ldquo;the portal game&rdquo; on Source Engine as fast as possible. Later on playtests showed that 15-30 minutes into the game players got bored by the lack of purpose, theme, and story. This feedback led to the development of the entire concept of Aperture Science Laboratories.</p>
<hr>
<p>The game is quite &ldquo;meta&rdquo; in its narrative. In &ldquo;Heartbreaker&rdquo; player takes on the role of an anonymous character guided by the voice of a young woman, while visiting <strong>Elcoro</strong> – a realm inhabited by extremely wealthy individuals who achieved everything they desired in their lifes. We quickly realize that this whole resort, although looking happy, is full of decadence and coldheartedness. The female narrator tells our hero to <strong>crash those hearts of stone</strong> to make the land happy again.</p>
<p>Jesse Schell in his book <a href="https://www.amazon.com/Art-Game-Design-Lenses-Third/dp/1138632058">&ldquo;The Art of Game Design: A Book of Lenses&rdquo;</a> mentions that story can often go for the rescue when suffering from some development headaches!</p>
<blockquote>My initial design for the gameplay in "Mordak’s Revenge" board game required players to <b>collect five keys</b> to battle the evil wizard Mordak at his stronghold. However, I realized it would be better if Mordak <b>could come to the player instead</b>, making the experience more immediate. So, I changed the story: <b>what if Mordak's castle was hidden</b>, and players needed to <b>collect five summoning stones</b> instead of keys? Once all five were gathered, Mordak could be summoned to battle the player in any circumstances. This simple change made the desired gameplay possible.
<br>
<br>
<span style="font-size: 20px; font-family: Signika; float: right; margin-top: 8px;"><i>— Jesse Schell in his book</i></span><br>
</blockquote>
<p>The author also points out (and I agree with him) that:</p>
<blockquote>Story elements can often be changed with just a few words, where changing elements of gameplay might take weeks of balancing, and changing elements of technology might take months of reprogramming.
<br>
<br>
<span style="font-size: 20px; font-family: Signika; float: right; margin-top: 8px;"><i>— Jesse Schell in his book</i></span><br>
</blockquote>



  



<div class="notice tip">
  <div class="notice-head"><svg
        width="20"
        height="20"
        viewBox="0 0 24 24"
        fill="none"
        xmlns="http://www.w3.org/2000/svg">
        <path
          fillRule="evenodd"
          clipRule="evenodd"
          d="M12 0C18.6274 0 24 5.37258 24 12C24 18.6274 18.6274 24 12 24C5.37258 24 0 18.6274 0 12C0 5.37258 5.37258 0 12 0ZM12 2.4C6.69807 2.4 2.4 6.69807 2.4 12C2.4 17.3019 6.69807 21.6 12 21.6C17.3019 21.6 21.6 17.3019 21.6 12C21.6 6.69807 17.3019 2.4 12 2.4ZM15.9515 7.55147L9.6 13.9029L8.04853 12.3515C7.5799 11.8828 6.8201 11.8828 6.35147 12.3515C5.88284 12.8201 5.88284 13.5799 6.35147 14.0485L8.75147 16.4485C9.2201 16.9172 9.9799 16.9172 10.4485 16.4485L17.6485 9.24853C18.1172 8.7799 18.1172 8.0201 17.6485 7.55147C17.1799 7.08284 16.4201 7.08284 15.9515 7.55147Z"
          fill="currentColor" />
      </svg><p>Tip</p>
  </div>
  <div class="notice-body"><p>Story for the rescue! Don&rsquo;t be afraid to change it to support other elements better, especially gameplay and the clarity of it.</p></div>
</div>

<h4 id="level-design--level-art">Level Design &amp; Level Art</h4>
<p>In a linear game where players just traverse content it is extremely crucial that they know where to go. This was the main focus during the process of designing levels in &ldquo;Heartbreaker&rdquo;. But firstly, <strong>let&rsquo;s distinct level design from level/environment art</strong>.</p>
<p>On <a href="https://jeffhoral.artstation.com">his ArtStation</a>, Jeff Horal, Principal Environment Artist at Mountaintop, showcases many locations from &ldquo;Destiny 2&rdquo; as blockouts – representing the level design phase – and their final look after adding actual models, applying materials, and including decoration. <strong>The upper image depicts the level during design iterations, while the lower image shows the finished version:</strong></p>
<center>
<table>
<thead>
<tr>
<th style="text-align:center"><span style="font-size: 30px; font-family: Signika;">A part of &ldquo;Vostok&rdquo; – a &ldquo;Destiny 2&rdquo; map. Author: <a href="https://jeffhoral.artstation.com">Jeff Horal</a>.</span></th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">




















  
  
  


  
  
    
    
      
    

    


    
    


    
    
    
    
    
    
    


    
    
      
      

      


      

      
      
        
        
        
      
      
      
      

    
    

    
    
      
      
          <img
            title=""
            loading="lazy"
            decoding="async"
            class="img img-fluid "
            width="1200"
            height="1350"
            src="/images/posts/post-2/vostok_hu4170442ee83be5be855573cb4c32b98e_487983_1200x0_resize_q100_h2_lanczos.webp"
            alt=""
            onerror="this.onerror='null';this.src='\/images\/posts\/post-2\/vostok_hu4170442ee83be5be855573cb4c32b98e_487983_1200x0_resize_q100_lanczos.jpg'" />
      
    

  
  






</td>
</tr>
</tbody>
</table>
</center>
<p>This image was firstly presented to me during a university lecture, ❤ so I wanted to reference it here too!</p>
<p>During production, it&rsquo;s extremely important to <strong>keep your levels in the level design stage</strong> (the upper picture) <strong>when iterating</strong>. This is because reworking a blockout is like playing with building blocks, and reworking a decorated level is like destroying your freshly arranged house, moving all the walls, and furnishing it again. <strong>Don&rsquo;t waste time for redoing your level art job unnecessarily</strong> and enter the level art stage <strong>after</strong> deep iterations and feedback from playtesters.</p>
<hr>
<p>This was also our goal during the development of &ldquo;Heartbreaker&rdquo;. However, I must admit that &ldquo;the YOLO approach&rdquo; kicked in a few times in several tight corners of production. Welcome to gamedev! 🎉 I discuss this further in the <a href="#the-mess-of-game-production">&ldquo;The Mess of Game Production&rdquo;</a> section.</p>
<p>The normal process looked like this: a part of the level was designed as a blockout and tested through multiple iterations. After making some pivots and adjustments, the location was ready for decoration. This has been usually handled by Agata, our art lead, though other developers often have contributed as well.</p>
<p><strong>We wanted to make every location you visit in &ldquo;Heartbreaker&rdquo; distinct and memorable</strong>. There&rsquo;s a patio with a garden party, swimming baths, a nightclub, jungle, housing district, atrium, casino, bowling alley, library, rooftop pool, mini-golf course, and a shopping mall&hellip; and that&rsquo;s just the first 20 minutes of the game! (Yes, I&rsquo;m so excited about our locations).</p>





















  
  <div
    class=" gallery 
      zoomable
    ">
    
      
      
      
        












  
  
    
    
  
  
  


  
  
    

    
    


    
    
    
    
    
    
    
    


    

    
    
    
      
      
        
        
      
      
    


    
  


  


        
        
        
        

        <div class="gallery-item">
          
            <a
              href="/images/posts/post-2/gallery/screen%20%281%29.png"
              style="display: block;"
              class="glightbox">
              <img
                loading="lazy"
                src="/images/posts/post-2/gallery/screen%20%281%29_hudc0f07964ef4448b48f5f03b72d8e7bd_2184194_1280x720_fit_lanczos_3.png"
                class="img"
                style="margin: 0;"
                alt="screen (1).png"
                onerror="this.onerror='null';this.src='\/images\/posts\/post-2\/gallery\/screen%20%281%29_hudc0f07964ef4448b48f5f03b72d8e7bd_2184194_1280x720_fit_lanczos_3.png'" />
            </a>
          
        </div>
      
    
      
      
      
        












  
  
    
    
  
  
  


  
  
    

    
    


    
    
    
    
    
    
    
    


    

    
    
    
      
      
        
        
      
      
    


    
  


  


        
        
        
        

        <div class="gallery-item">
          
            <a
              href="/images/posts/post-2/gallery/screen%20%282%29.png"
              style="display: block;"
              class="glightbox">
              <img
                loading="lazy"
                src="/images/posts/post-2/gallery/screen%20%282%29_huec2eb80b43c5b4ab99d3a057eae7ff23_2574946_1280x720_fit_lanczos_3.png"
                class="img"
                style="margin: 0;"
                alt="screen (2).png"
                onerror="this.onerror='null';this.src='\/images\/posts\/post-2\/gallery\/screen%20%282%29_huec2eb80b43c5b4ab99d3a057eae7ff23_2574946_1280x720_fit_lanczos_3.png'" />
            </a>
          
        </div>
      
    
      
      
      
        












  
  
    
    
  
  
  


  
  
    

    
    


    
    
    
    
    
    
    
    


    

    
    
    
      
      
        
        
      
      
    


    
  


  


        
        
        
        

        <div class="gallery-item">
          
            <a
              href="/images/posts/post-2/gallery/screen%20%283%29.png"
              style="display: block;"
              class="glightbox">
              <img
                loading="lazy"
                src="/images/posts/post-2/gallery/screen%20%283%29_hucccae96ba7c6eb18137e996684354d73_6281485_1280x720_fit_lanczos_3.png"
                class="img"
                style="margin: 0;"
                alt="screen (3).png"
                onerror="this.onerror='null';this.src='\/images\/posts\/post-2\/gallery\/screen%20%283%29_hucccae96ba7c6eb18137e996684354d73_6281485_1280x720_fit_lanczos_3.png'" />
            </a>
          
        </div>
      
    
      
      
      
        












  
  
    
    
  
  
  


  
  
    

    
    


    
    
    
    
    
    
    
    


    

    
    
    
      
      
        
        
      
      
    


    
  


  


        
        
        
        

        <div class="gallery-item">
          
            <a
              href="/images/posts/post-2/gallery/screen%20%284%29.png"
              style="display: block;"
              class="glightbox">
              <img
                loading="lazy"
                src="/images/posts/post-2/gallery/screen%20%284%29_hu6ba27b5e874aadebe853ca3c9d2c42d5_2676930_1280x720_fit_lanczos_3.png"
                class="img"
                style="margin: 0;"
                alt="screen (4).png"
                onerror="this.onerror='null';this.src='\/images\/posts\/post-2\/gallery\/screen%20%284%29_hu6ba27b5e874aadebe853ca3c9d2c42d5_2676930_1280x720_fit_lanczos_3.png'" />
            </a>
          
        </div>
      
    
    
  </div>

  




  



<div class="notice tip">
  <div class="notice-head"><svg
        width="20"
        height="20"
        viewBox="0 0 24 24"
        fill="none"
        xmlns="http://www.w3.org/2000/svg">
        <path
          fillRule="evenodd"
          clipRule="evenodd"
          d="M12 0C18.6274 0 24 5.37258 24 12C24 18.6274 18.6274 24 12 24C5.37258 24 0 18.6274 0 12C0 5.37258 5.37258 0 12 0ZM12 2.4C6.69807 2.4 2.4 6.69807 2.4 12C2.4 17.3019 6.69807 21.6 12 21.6C17.3019 21.6 21.6 17.3019 21.6 12C21.6 6.69807 17.3019 2.4 12 2.4ZM15.9515 7.55147L9.6 13.9029L8.04853 12.3515C7.5799 11.8828 6.8201 11.8828 6.35147 12.3515C5.88284 12.8201 5.88284 13.5799 6.35147 14.0485L8.75147 16.4485C9.2201 16.9172 9.9799 16.9172 10.4485 16.4485L17.6485 9.24853C18.1172 8.7799 18.1172 8.0201 17.6485 7.55147C17.1799 7.08284 16.4201 7.08284 15.9515 7.55147Z"
          fill="currentColor" />
      </svg><p>Tip</p>
  </div>
  <div class="notice-body"><p>Keep your levels at the stage of blockout during prototyping and tests. Finishing it, decorating, and filling with final assets <strong>too early</strong> might result in unnecessary work.</p></div>
</div>

<h4 id="music--sfx">Music &amp; SFX</h4>
<p>Sound and music are also something that holds the game together and you shouldn&rsquo;t ignore it. They are important for many reasons. Some more obvious, like being an integral part of the antourage around the game&rsquo;s setting, just like visuals. Less obvious reasons include <strong>being a major UX component</strong> – sound can be (and should be!) used as <strong>something that gives players feedback</strong> just as user interface, particles, or other visuals.</p>
<hr>
<p>In &ldquo;Heartbreaker&rdquo;, sound effects are everywhere – they accompany every action players take, every piece of it, to fully notify the players about what is happening right now. The main goal our sound designer and composer, <a href="https://soundcloud.com/michal_swistak">Michał</a>, has had was delivering the feeling of being immersed into the world we have created.</p>
<p>Soundtrack is also built around the party and holiday theme with a nostalgic addition to it. Players traverse the levels listening to chill &amp; beach house music. What is more, the music reflects the atmosphere of the story we discover and locations we visit. When we arrive at the garden party at the very beginning of the game, we can hear a lively dance track. When we reach darker but much more magical jungle, <a href="https://youtu.be/9UdSVbAIhKI?t=204" target="_blank">the music changes to more nostalgic</a>. You can listen to the full soundtrack below:</p>
<div style="width: 500px; height: 500px; display: flex; flex-direction: column; justify-content: center; align-items: center; margin: 0 auto;">
    <iframe width="100%" height="450" scrolling="no" frameborder="no" allow="autoplay" src="https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/playlists/1842737232&color=%2398bcdc&auto_play=false&hide_related=false&show_comments=true&show_user=true&show_reposts=false&show_teaser=true"></iframe><div style="font-size: 10px; color: #cccccc;line-break: anywhere;word-break: normal;overflow: hidden;white-space: nowrap;text-overflow: ellipsis; font-family: Interstate,Lucida Grande,Lucida Sans Unicode,Lucida Sans,Garuda,Verdana,Tahoma,sans-serif;font-weight: 100;"><a href="https://soundcloud.com/michal_swistak" title="michal_swistak" target="_blank" style="color: #cccccc; text-decoration: none;">Michał Świstak</a> · <a href="https://soundcloud.com/michal_swistak/sets/heartbreaker_ost" title="heartbreaker_OST" target="_blank" style="color: #cccccc; text-decoration: none;">Heartbreaker OST</a></div>
</div>
<p>Please also note that our game contains <strong>full voice acting</strong>. This was extremely important in terms of delivering our simple story. I&rsquo;ve also had plenty of fun with the whole entourage of producing high-quality voiceover, as a game producer. <strong>We rented a recording studio and Michał, our sound designer, supervised the process of recording voicelines with Ola, our narrator</strong>. We could together analyze the voicelines on the fly and guide Ola what do say differently or with different emotions. I absolutely loved the process.</p>



  



<div class="notice tip">
  <div class="notice-head"><svg
        width="20"
        height="20"
        viewBox="0 0 24 24"
        fill="none"
        xmlns="http://www.w3.org/2000/svg">
        <path
          fillRule="evenodd"
          clipRule="evenodd"
          d="M12 0C18.6274 0 24 5.37258 24 12C24 18.6274 18.6274 24 12 24C5.37258 24 0 18.6274 0 12C0 5.37258 5.37258 0 12 0ZM12 2.4C6.69807 2.4 2.4 6.69807 2.4 12C2.4 17.3019 6.69807 21.6 12 21.6C17.3019 21.6 21.6 17.3019 21.6 12C21.6 6.69807 17.3019 2.4 12 2.4ZM15.9515 7.55147L9.6 13.9029L8.04853 12.3515C7.5799 11.8828 6.8201 11.8828 6.35147 12.3515C5.88284 12.8201 5.88284 13.5799 6.35147 14.0485L8.75147 16.4485C9.2201 16.9172 9.9799 16.9172 10.4485 16.4485L17.6485 9.24853C18.1172 8.7799 18.1172 8.0201 17.6485 7.55147C17.1799 7.08284 16.4201 7.08284 15.9515 7.55147Z"
          fill="currentColor" />
      </svg><p>Tip</p>
  </div>
  <div class="notice-body"><p>Sound and music provide feedback to players (tell what&rsquo;s happening) and set the atmosphere and they&rsquo;re as important as visuals.</p></div>
</div>

<h4 id="ui--ux">UI &amp; UX</h4>
<p>Another consequential element of the multilayered approach is the general user experience (UX). This is the overall feeling a user has while interacting with the product (game) and there are countless ways to mess it up. You should of course strive to bring it to a higher level and that often happens by massive iterations, tests, and observing players while asking <em>&ldquo;What do the players do?&rdquo;</em>, <em>&ldquo;Why do they do it?&rdquo;</em>, or <em>&ldquo;How do they do it?&rdquo;</em>.</p>
<p>There are also thousands of ways to show what&rsquo;s going on in your game, and to let players interact with the game – and that&rsquo;s where UI comes in. User interface. And interface is not only things you see on your screen in an overlay manner. It&rsquo;s the totality of things that communicate information to the players and let them interact with your game.</p>
<p>And now I&rsquo;d like to throw a shout-out to my teacher, <a href="https://www.linkedin.com/in/jaroslawandrzejczak/">Jarosław Andrzejczak, PhD</a>, a UX researcher, who has vastly improved the general user experience and clarity of many systems and mechanics we have included in our game.</p>
<p>The main conclusion I have in reference to working on UI/UX of &ldquo;Heartbreaker&rdquo; is:</p>



  



<div class="notice tip">
  <div class="notice-head"><svg
        width="20"
        height="20"
        viewBox="0 0 24 24"
        fill="none"
        xmlns="http://www.w3.org/2000/svg">
        <path
          fillRule="evenodd"
          clipRule="evenodd"
          d="M12 0C18.6274 0 24 5.37258 24 12C24 18.6274 18.6274 24 12 24C5.37258 24 0 18.6274 0 12C0 5.37258 5.37258 0 12 0ZM12 2.4C6.69807 2.4 2.4 6.69807 2.4 12C2.4 17.3019 6.69807 21.6 12 21.6C17.3019 21.6 21.6 17.3019 21.6 12C21.6 6.69807 17.3019 2.4 12 2.4ZM15.9515 7.55147L9.6 13.9029L8.04853 12.3515C7.5799 11.8828 6.8201 11.8828 6.35147 12.3515C5.88284 12.8201 5.88284 13.5799 6.35147 14.0485L8.75147 16.4485C9.2201 16.9172 9.9799 16.9172 10.4485 16.4485L17.6485 9.24853C18.1172 8.7799 18.1172 8.0201 17.6485 7.55147C17.1799 7.08284 16.4201 7.08284 15.9515 7.55147Z"
          fill="currentColor" />
      </svg><p>Tip</p>
  </div>
  <div class="notice-body"><p>You can show many things in a more natural, &ldquo;human-friendly&rdquo; way, rather than with standardized and abused (and not always perfect) video game patterns.</p></div>
</div>

<p>Let&rsquo;s take this example: In the second level we introduce <strong>the grappling hook</strong>. During playtests it turned out that this skill is massively overpowered. Grappling could get us literally everywhere. We came to a conclusion that grappling needs nerfing, although in a way that doesn&rsquo;t make the players feel weakened. So we decided that <strong>there will be only one use of the grappling hook</strong> but <strong>the players will earn it back with each heartbreak</strong>. So how do we show that rule to the player?</p>
<p>Well obviously we could come up with an on-screen icon depicting a grappling hook. If it&rsquo;s full, we can use the grappling, if it&rsquo;s empty – we can&rsquo;t. <strong>That&rsquo;s the most brute-force thing one can potentially come up with</strong>. It can be done in a more natural and understandable way for the player – take a look at this idea of our teacher:</p>
<center>
<table>
<thead>
<tr>
<th style="text-align:center"><span style="font-size: 30px; font-family: Signika;"><strong>Grappling is a heart fragment – you take it by breaking the heart.</strong></span></th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">




















  
  
  


  
  
    
    
      
    

    


    
    


    
    
    
    
    
    
    


    
    
      
      
      
    
    

    
    
      
      
          <img
            title=""
            loading="lazy"
            decoding="async"
            class="img img-fluid "
            width="570"
            height="323"
            src="/images/posts/post-2/ux.gif"
            alt=""
            onerror="this.onerror='null';this.src=''" />
      
    

  
  






</td>
</tr>
</tbody>
</table>
</center>
<p>Why clutter the interface with additional icons just because that’s the first idea that comes to mind? <strong>We have hand animations, so we decided to use them!</strong> It&rsquo;s as simple as that: <strong>grappling is a piece of a heart</strong>. If you have this piece in your hand, obvoiusly you can use it and you see your character throw it. It&rsquo;s logical. A &ldquo;side-effect&rdquo; of it is that it limits the use of grappling, so <strong>this is the exact nerf of this gameplay aspect we aimed to achieve</strong>.</p>
<h4 id="tutoring">Tutoring</h4>
<p>Players need to learn how to play your game. So how do you do teach them? A tutorial? Or maybe throw the players into deep water and let them figure out gameplay on their own? We decided to apply a <strong>seamless approach</strong>. This means that, instead of a &ldquo;traditional&rdquo; tutorial we embedded the process of teaching players how to play into main levels of the game. The main goal of this is to not let the players realize that they are being taught how to play.</p>
<p>And much more. Now I want to convey that <strong>bad tutoring in your game can put off players</strong>. And I find this topic so important that I even <a href="/blog/post-1/" target="_blank">wrote a separate article about that</a>. Trust me. Designing tutoring is a complex topic. So I encourage you to visit this separate text about it. But to not leave you with nothing at this point, I would like to highlight a &ldquo;megaprotip&rdquo; here: Please, <strong>don&rsquo;t underestimate the process of teaching players how to play</strong>. Don&rsquo;t leave it at the last moment of production, don&rsquo;t think that a short brief of controls or gameplay will be enough. Even if it teaches the player how to play, there&rsquo;s likely a better solution that&rsquo;s fun, elegant and helpful. <strong>Make other elements, especially UI &amp; UX support this element</strong>.</p>
<center>
<table>
<thead>
<tr>
<th style="text-align:center"><span style="font-size: 22px; font-family: Signika;">&ldquo;Guiding Light&rdquo;, another game I worked on, attempts to apply seamless tutoring too. You can read more about it in <a href="/blog/post-1/" target="_blank">this article</a>. </span></th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">




















  
  
  


  
  
    
    
      
    

    


    
    


    
    
    
    
    
    
    


    
    
      
      

      


      

      
      
        
        
        
      
      
      
      

    
    

    
    
      
      
          <img
            title=""
            loading="lazy"
            decoding="async"
            class="img img-fluid "
            width="800"
            height="350"
            src="/images/posts/post-1/post-1_hu15aada9750093d492186d7bc841149c3_326162_800x0_resize_q100_h2_lanczos_3.webp"
            alt=""
            onerror="this.onerror='null';this.src='\/images\/posts\/post-1\/post-1_hu15aada9750093d492186d7bc841149c3_326162_800x0_resize_q100_lanczos_3.png'" />
      
    

  
  






</td>
</tr>
</tbody>
</table>
</center>



  



<div class="notice tip">
  <div class="notice-head"><svg
        width="20"
        height="20"
        viewBox="0 0 24 24"
        fill="none"
        xmlns="http://www.w3.org/2000/svg">
        <path
          fillRule="evenodd"
          clipRule="evenodd"
          d="M12 0C18.6274 0 24 5.37258 24 12C24 18.6274 18.6274 24 12 24C5.37258 24 0 18.6274 0 12C0 5.37258 5.37258 0 12 0ZM12 2.4C6.69807 2.4 2.4 6.69807 2.4 12C2.4 17.3019 6.69807 21.6 12 21.6C17.3019 21.6 21.6 17.3019 21.6 12C21.6 6.69807 17.3019 2.4 12 2.4ZM15.9515 7.55147L9.6 13.9029L8.04853 12.3515C7.5799 11.8828 6.8201 11.8828 6.35147 12.3515C5.88284 12.8201 5.88284 13.5799 6.35147 14.0485L8.75147 16.4485C9.2201 16.9172 9.9799 16.9172 10.4485 16.4485L17.6485 9.24853C18.1172 8.7799 18.1172 8.0201 17.6485 7.55147C17.1799 7.08284 16.4201 7.08284 15.9515 7.55147Z"
          fill="currentColor" />
      </svg><p>Tip</p>
  </div>
  <div class="notice-body"><p>Approach tutoring players as another important gameplay element which needs to be intentionally thought-out and designed.</p></div>
</div>

<h2 id="the-mess-of-game-production">The Mess of Game Production</h2>
<p>No matter how well production is managed, unpredictable issues may arise. This could be an unexpected engine bug that prevents crucial systems from functioning, problems with outsourcing, or even hardware malfunctions. This is why a reasonable amount of time should be allocated during production as a safety buffer. And when you&rsquo;re concerned that certain tasks may take longer than anticipated, remember:</p>



  



<div class="notice tip">
  <div class="notice-head"><svg
        width="20"
        height="20"
        viewBox="0 0 24 24"
        fill="none"
        xmlns="http://www.w3.org/2000/svg">
        <path
          fillRule="evenodd"
          clipRule="evenodd"
          d="M12 0C18.6274 0 24 5.37258 24 12C24 18.6274 18.6274 24 12 24C5.37258 24 0 18.6274 0 12C0 5.37258 5.37258 0 12 0ZM12 2.4C6.69807 2.4 2.4 6.69807 2.4 12C2.4 17.3019 6.69807 21.6 12 21.6C17.3019 21.6 21.6 17.3019 21.6 12C21.6 6.69807 17.3019 2.4 12 2.4ZM15.9515 7.55147L9.6 13.9029L8.04853 12.3515C7.5799 11.8828 6.8201 11.8828 6.35147 12.3515C5.88284 12.8201 5.88284 13.5799 6.35147 14.0485L8.75147 16.4485C9.2201 16.9172 9.9799 16.9172 10.4485 16.4485L17.6485 9.24853C18.1172 8.7799 18.1172 8.0201 17.6485 7.55147C17.1799 7.08284 16.4201 7.08284 15.9515 7.55147Z"
          fill="currentColor" />
      </svg><p>Tip</p>
  </div>
  <div class="notice-body"><p>Things always take longer than expected. Take this into account when planning your time budget.</p></div>
</div>

<p>An example from the production of &ldquo;Heartbreaker&rdquo; is fog. During the development of the second level, we began using a different type of fog to cover the depths of the level. It turned out that this fog caused a memory leak in the engine&rsquo;s rendering module, resulting in slower performance and eventually crashing the engine. We discovered that this bug was fixed in the next Unreal Engine hotfix. However, several factors prevented us from migrating to the new version. While this problem slowed us down to some extent, we came up with a temporary solution. We concluded that the memory leak did not occur in the built game, so we created a simple script that deactivated all the fog in the editor and reactivated it just before building the game. <strong>Emergencies like this happen</strong>.</p>
<p>To address &ldquo;the YOLO approach&rdquo; I mentioned earlier, there were significant untested sections of the blockout. Unfortunately, due to time constraints in a few tight corners of production, we had to finish the levels with very little player feedback regarding some parts. So we polished those parts, decorated them, and didn&rsquo;t look back. In several cases we were lucky and the reception of those level sections was satisfactory. However, some parts turned out to be too frustrating or difficult. The same with a few UI &amp; UX aspects – they could have been better, but we couldn’t manage some obstacles that arised every time. And even Scrum, Trello, TO-DO lists, or feedback-based rapid prototyping fell short in a few cases because certain obstacles were simply not predicted. Even though, the above lean tools are powerful, albeit basic. Remember: <strong>the role of the producer is to remove the obstacles in front of the development team</strong>.</p>
<h2 id="the-art-of-defining-scope-and-cutting-things-out">The Art of Defining Scope And Cutting Things Out</h2>
<p>I mentioned that &ldquo;Heartbreaker&rdquo; went through a lot before its gameplay crystalized. It started with a simple recruitment task I finished in one weekend (built with Blueprints and Unreal&rsquo;s LearningKit assets). It was a completely different game which trick was <strong>jumping and moving forward constantly</strong>. This trick was blended with basic puzzles and arcade character of the game, shooting, in addition. It looked like this:</p>
<center>





















  
  
  


  
  
    
    
      
    

    


    
    


    
    
    
    
    
    
    


    
    
      
      
      
    
    

    
    
      
      
          <img
            title=""
            loading="lazy"
            decoding="async"
            class="img img-fluid "
            width="570"
            height="323"
            src="/images/posts/post-2/jump.gif"
            alt=""
            onerror="this.onerror='null';this.src=''" />
      
    

  
  







</center>
<p>Of course it resembles more of a gamejam prototype than an actual game, but me and my team started to build upon this prototype, test other camera perspectives and the idea in general. But then, a real gamejam happened!</p>
<p>In 48 hours we created a game called &ldquo;The Power of Four Leaves&rdquo;, in which you played as <strong>a black cat staging a heist on a four-leaf clover storage</strong>. Players could fight lepricorns and, as the players embodied a black cat, the combat was designed as <strong>dashing in front of the lepricorns</strong>, so they are unlucky and disappear. And this is when we introduced the idea of using your movement as combat. You had to use <strong>a dash skill</strong> to make the lepricorn disappear. Pretty similar to <strong>dashing into hearts of the enemies</strong>, isn&rsquo;t it? Well, it&rsquo;s almost the same!</p>
<p>Gamejam projects often have twisted gameplay, so of course there are GIFs with explanation:</p>
<table>
<thead>
<tr>
<th style="text-align:center"><span style="font-size: 24px; font-family: Signika;"><strong>Dashing in front of lepricorns to defeat them</strong></span></th>
<th style="text-align:center"><span style="font-size: 24px;  font-family: Signika;"><strong>Crashing hearts of stone in &ldquo;Heartbreaker&rdquo;</strong></span></th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">




















  
  
  


  
  
    
    
      
    

    


    
    


    
    
    
    
    
    
    


    
    
      
      
      
    
    

    
    
      
      
          <img
            title=""
            loading="lazy"
            decoding="async"
            class="img img-fluid "
            width="570"
            height="323"
            src="/images/posts/post-2/four.gif"
            alt=""
            onerror="this.onerror='null';this.src=''" />
      
    

  
  






</td>
<td style="text-align:center">




















  
  
  


  
  
    
    
      
    

    


    
    


    
    
    
    
    
    
    


    
    
      
      
      
    
    

    
    
      
      
          <img
            title=""
            loading="lazy"
            decoding="async"
            class="img img-fluid "
            width="570"
            height="323"
            src="/images/posts/post-2/crash.gif"
            alt=""
            onerror="this.onerror='null';this.src=''" />
      
    

  
  






</td>
</tr>
</tbody>
</table>
<p>We decided to blend the &ldquo;constant jumping&rdquo; idea <strong>(the one from the recruitment task)</strong> with using dash for combat and the results were&hellip; <strong>disappointing</strong>. One day I showed a prototype to some experienced devs during a local gamedev beer meeting and their feedback made us realize that <strong>this gameplay needs cuts</strong>.</p>
<p>The problem was that <strong>our gameplay consisted of too many dynamic, difficult to master mechanics</strong> that were just <strong>random things put together</strong>. Then we were standing in front of a difficult choice – what to remove?</p>
<p>We removed the whole &ldquo;constant jumping&rdquo; stuff and decided to master the dash combat. And the rest of it is &ldquo;Heartbreaker&rdquo; you can play today. We focused on <em>this one thing</em>, the <strong>unique selling point</strong> and aimed to master it. Every next gameplay aspect that was in the game to serve this idea and make it deeper. And we are proud of how it developed.</p>
<p>The main conclusion here is: <strong>you shouldn&rsquo;t be afraid to &ldquo;kill your child&rdquo;</strong>. That means, <strong>you shouldn&rsquo;t hesitate to cut out a thing you spent time working on if it doesn&rsquo;t fit, doesn&rsquo;t work, or doesn&rsquo;t serve any real purpose in your game</strong>. I know this is difficult, learned it the hard way. But the outcome might be indeed lifesaving, because often &ldquo;less&rdquo; means &ldquo;better&rdquo; because of clarity, consistency, simplicity, and elegance of gameplay.</p>



  



<div class="notice tip">
  <div class="notice-head"><svg
        width="20"
        height="20"
        viewBox="0 0 24 24"
        fill="none"
        xmlns="http://www.w3.org/2000/svg">
        <path
          fillRule="evenodd"
          clipRule="evenodd"
          d="M12 0C18.6274 0 24 5.37258 24 12C24 18.6274 18.6274 24 12 24C5.37258 24 0 18.6274 0 12C0 5.37258 5.37258 0 12 0ZM12 2.4C6.69807 2.4 2.4 6.69807 2.4 12C2.4 17.3019 6.69807 21.6 12 21.6C17.3019 21.6 21.6 17.3019 21.6 12C21.6 6.69807 17.3019 2.4 12 2.4ZM15.9515 7.55147L9.6 13.9029L8.04853 12.3515C7.5799 11.8828 6.8201 11.8828 6.35147 12.3515C5.88284 12.8201 5.88284 13.5799 6.35147 14.0485L8.75147 16.4485C9.2201 16.9172 9.9799 16.9172 10.4485 16.4485L17.6485 9.24853C18.1172 8.7799 18.1172 8.0201 17.6485 7.55147C17.1799 7.08284 16.4201 7.08284 15.9515 7.55147Z"
          fill="currentColor" />
      </svg><p>Tip</p>
  </div>
  <div class="notice-body"><p>Don&rsquo;t fear to sacrifice something you&rsquo;ve been working on for some time if it doesn&rsquo;t help your game. The game will benefit from this cut and that&rsquo;s what matters.</p></div>
</div>

<h2 id="summary">Summary</h2>
<p>Woah! That was a lot of insight into &ldquo;Heartbreaker&rdquo;. I hope that I managed to show what challenges we, as a team, needed to tackle during the development and <strong>how we tied the game together using the holistic approach</strong>. This article is also my personal point of view with this <strong>&ldquo;aspiring producer/director&rdquo; mindset</strong>. Elements uncover obstacles a producer needs to be aware of, and needs to remove, so the development team can finish the game. <strong>Are there things that we could (or still can) do better in &ldquo;Heartbreaker&rdquo;?</strong> Of course! So for now take this tip summary and I&rsquo;m going back to working on our game. To iterate, test, prototype, and enhance.</p>



  



<div class="notice tip Summary">
  <div class="notice-head"><svg
        width="20"
        height="20"
        viewBox="0 0 20 20"
        fill="none"
        xmlns="http://www.w3.org/2000/svg">
        <path
          d="M10 9V14M10 19C5.02944 19 1 14.9706 1 10C1 5.02944 5.02944 1 10 1C14.9706 1 19 5.02944 19 10C19 14.9706 14.9706 19 10 19ZM10.0498 6V6.1L9.9502 6.1002V6H10.0498Z"
          stroke="currentColor"
          stroke-width="2"
          stroke-linecap="round"
          stroke-linejoin="round"></path>
      </svg><p>Tip Summary</p>
  </div>
  <div class="notice-body"><p><ul>
<li>Start the development with gameplay – prototype it, iterate, playtest, enhance.</li>
<li>Prepare a comfortable space for developers to prototype, test, and iterate crucial gameplay mechanics. Don&rsquo;t fear creating custom tools.</li>
<li>Make art style parallel with gameplay and story. Aim to make players think of your gameplay and story when they look at your game and the reverse.</li>
<li>Story for the rescue! Don&rsquo;t be afraid to change it to support other elements better, especially gameplay and the clarity of it.</li>
<li>Keep your levels at the stage of blockout during prototyping and tests. Finishing it, decorating, and filling with final assets <strong>too early</strong> might result in unnecessary work.</li>
<li>Sound and music provide feedback to players (tell what&rsquo;s happening) and set the atmosphere and they&rsquo;re as important as visuals.</li>
<li>You can show many things in a more natural, &ldquo;human-friendly&rdquo; way, rather than with standardized and abused (and not always perfect) video game patterns.</li>
<li>Approach tutoring players as another important gameplay element which needs to be intentionally thought-out and designed.</li>
<li>Things always take longer than expected. Take this into account when planning your time budget.</li>
<li>Don&rsquo;t fear to sacrifice something you&rsquo;ve been working on for some time if it doesn&rsquo;t help your game. The game will benefit from this cut and that&rsquo;s what matters.</li>
</ul>
</p></div>
</div>

<p>Good luck in managing your gamedev projects and remember: <strong>When a game succeeds, the development team succeeds. When a game fails, the producer fails</strong>. Keep the morale high, work as a team, and finish the game. Fingers crossed! 🤞</p>
<h2 id="sources--additional-materials">Sources &amp; Additional Materials</h2>
<ul>
<li><a href="https://www.youtube.com/watch?v=R5lFhTYnSS0">&ldquo;How to become a Game Producer #1&rdquo;</a> – partly a promotion for the Futuregames game producer course, but this webinar offers valuable info about being a producer. Part #1.</li>
<li><a href="https://www.youtube.com/watch?v=SfHmVFoXmlo">&ldquo;How to become a Game Producer #2&rdquo;</a> – and part #2 here.</li>
<li><a href="https://youtu.be/d9_Isp17KN0?t=590">&ldquo;The Strange and Unseen History of Portal&rdquo;</a> – a video about the development of &ldquo;Portal&rdquo;. It mentions how the gameplay was built and polished first and the story got built upon it.</li>
<li><a href="https://www.youtube.com/watch?v=UBfKcBxtYkI">&ldquo;Narbacular Drop&rdquo; gameplay</a> – a game made by DigiPen Institute of Technology students that became a foundation of the original &ldquo;Portal.&rdquo;</li>
<li><a href="https://www.amazon.com/Art-Game-Design-Lenses-Third/dp/1138632058">&ldquo;The Art of Game Design: A Book of Lenses, Third Edition&rdquo;</a> – the bible of game design by Jesse Schell.</li>
<li><a href="https://jeffhoral.artstation.com">Jeff Horal ArtStation</a></li>
<li><a href="/blog/post-1/">&ldquo;Why Tutorial in Your Game Sucks (And What To Do About It)&rdquo;</a> – my another article about seamless tutorials.</li>
</ul>
]]></description>
                

                <guid isPermaLink="false">tag:,2024-10-01:/blog/post-2/</guid>

                
                    <link>/blog/post-2/</link>
                

                
                    <pubDate>Tue, 01 Oct 2024 16:58:35 CEST</pubDate>
                

                
                    <title>Holistic Game Production. How We Made “Heartbreaker”</title>
                
            </item>
        
            <item>
                
                
                
                
                
                
                

                

                

                

                

                
                

                

                

                
                    <description><![CDATA[<style>

:target:before {
  content: '';
  display: block;
  height: 100px; /* Adjust offset as needed */
  margin-top: -100px; /* Negative value equal to height */
  visibility: hidden;
}

html {
  scroll-behavior: smooth; /* Enable smooth scrolling behavior */
}

</style>
<p>Someone testing your game might point out that your tutorial is not fun. You, a developer convinced about its tutoring power, say:<br><em>&ldquo;It&rsquo;s a tutorial. It&rsquo;s supposed to teach the player how to play, not to be fun.&rdquo;</em></p>
<p><strong>Nothing could be further from the truth!</strong></p>
<h2 id="trying-to-answer-the-question">Trying To Answer The Question</h2>
<p>OK, yes, I don&rsquo;t know what tutorial you designed – it might be awesome! So let&rsquo;s discuss why tutorials in general might be <strong>NOT</strong> fun? Player feedback might mention it&rsquo;s too long, overwhelming, or text-heavy. While these points are often valid, they miss the core issue: <strong>the form, pacing, and structure of the tutorial</strong>. <strong>Players shouldn&rsquo;t even realize they&rsquo;re being taught</strong> and <strong>the joy of discovering the game should remain intact</strong>. That&rsquo;s how <strong>seamless tutorials</strong> are created.</p>
<h2 id="an-explicit-tutorial--the-witcher-2-assasins-of-kings">An Explicit Tutorial – &ldquo;The Witcher 2: Assasins of Kings&rdquo;</h2>
<p>Firstly, let&rsquo;s look at an acclaimed game that has a tutorial which doesn&rsquo;t align with the &ldquo;seamless&rdquo; philosophy. <strong>&ldquo;The Witcher 2: Assasins of Kings&rdquo;</strong> by <strong>CD Projekt RED</strong> is a great game, but the way it guides players is very explicit. I&rsquo;m not trying to judge here, but if your opinion will be that &ldquo;The Witcher&rsquo;s 2&rdquo; tutorial could be designed better, this section will show that even highly acclaimed AAA games can do it better. I&rsquo;m also <strong>NOT</strong> trying to say that my game I devote further part of this article is better than &ldquo;The Witcher 2&rdquo; (because it&rsquo;s not). It&rsquo;s good to highlight here that I want to present two approaches, but it&rsquo;s also not a mystery that I evangelize the seamless one. And that&rsquo;s just my personal opinion. What you can be sure of is that good tutoring is always <strong>iterated and tested</strong>, and that both of presented approaches have their pros and cons.</p>
<center>
<h3 id="heading"></h3>

















  





  
  
  


  
  
    
    
      
    

    


    
    


    
    
    
    
    
    
    


    
    
      
      

      
        
        
      


      

      
      
        
        
        
      
      
      
      

    
    

    
    
      
      
          <img
            title=""
            loading="lazy"
            decoding="async"
            class="img img-fluid img-center"
            width="750"
            height="400"
            src="/images/posts/post-1/w2_hu4166d19cdbf38d2bf63fa3a791558cb4_527345_750x400_fill_q100_lanczos_smart1_3.png"
            alt=""
            onerror="this.onerror='null';this.src='\/images\/posts\/post-1\/w2_hu4166d19cdbf38d2bf63fa3a791558cb4_527345_750x400_fill_q100_lanczos_smart1_3.png'" />
      
    

  
  






  <script>
    window.addEventListener("load", (e) => {
      const lightbox = GLightbox();
    });
  </script>


</center>
<p>If you want to remind &ldquo;The Witcher 2&rdquo; tutorial, there&rsquo;s a nice video by <a href="https://www.youtube.com/@BNGamesYT">BNGamesReviews</a> (though I strongly recommend playing the game if you haven&rsquo;t):</p>


    
    <div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
      <iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" loading="eager" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/SHK8huWiMpo?autoplay=0&controls=1&end=0&loop=0&mute=0&start=0" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" title="YouTube video"
      ></iframe>
    </div>

<p><strong>And here are the things we can observe in the tutorial of &ldquo;The Witcher 2&rdquo;:</strong></p>
<h4 id="detached-from-the-main-game">Detached From The Main Game</h4>
<p>The tutorial in &ldquo;The Witcher 2&rdquo; is optional and detached from the story. You are supposed to hop into the tutorial to learn how to play before you start the prologue. It&rsquo;s a pity that it&rsquo;s not <strong>any real adventure of Geralt</strong>. If this was designed seamlessly, the prologue should serve as an introduction, get players to know fundamentals of the gameplay, and then unfold.</p>
<p><strong>CD Projekt RED changed their direction</strong>. &ldquo;The Witcher 3&rdquo; keeps off this approach! Have you noticed that the whole region of White Orchard (and Geralt&rsquo;s dream before) serves as a seamless tutorial? You learn how to play by playing the game and being introduced slowly and seamlessly <strong>in the first section of the game</strong>. That&rsquo;s great!</p>
<h4 id="tutorial-about-the-tutorial">Tutorial About The Tutorial</h4>
<p>The first thing you see when the camera zooms in on Geralt during the tutorial is this panel:</p>

















  





  
  
  


  
  
    
    
      
    

    


    
    


    
    
    
    
    
    
    


    
    
      
      

      
        
        
      


      

      
      
        
        
        
      
      
      
      

    
    

    
    
      
      
          <img
            title=""
            loading="lazy"
            decoding="async"
            class="img img-fluid img-center"
            width="750"
            height="422"
            src="/images/posts/post-1/szkolenie-ze-szkolenia_hu1af1d2f9359c970f19780dadfaa1c295_1345514_750x422_resize_q100_lanczos_3.png"
            alt=""
            onerror="this.onerror='null';this.src='\/images\/posts\/post-1\/szkolenie-ze-szkolenia_hu1af1d2f9359c970f19780dadfaa1c295_1345514_750x422_resize_q100_lanczos_3.png'" />
      
    

  
  







<p><strong>This is what you do if you apply &ldquo;The Witcher&rsquo;s 2&rdquo; approach:</strong></p>
<ul>
<li><strong>you immediately tell the players: <em>&ldquo;Now you will be taught how to play!&rdquo;</em></strong>  Felling that you&rsquo;re being taught how to play might be like doing homework. The fun gets killed.</li>
<li><strong>the players want to play but you stop them.</strong> You may ask: <em>&ldquo;How do I make them play if they don&rsquo;t know how?&quot;</em>  Well, probably at the stage when Geralt has to move forward they&rsquo;ll get it quickly (and later on I&rsquo;ll show you how to make them get it seamlessly).</li>
<li><strong>that&rsquo;s a lot of text.</strong> Players don&rsquo;t like to read through tutorials. <strong>Don&rsquo;t get me wrong:</strong> I have nothing against text in games. There are many titles such as <a href="https://store.steampowered.com/app/632470/Disco_Elysium__The_Final_Cut/">Disco Elysium</a> that nail the art of written content, but I&rsquo;m talking about in-your-face tutorial panels.</li>
<li><strong>it breaks immersion</strong>. Each of these panels pulls you further from the world of The Witcher.</li>
</ul>
<p>It&rsquo;s not bad to inform players they can return to specific hints later. However, maybe this isn&rsquo;t the best moment to do so. An &ldquo;encyclopedia&rdquo; of game mechanics is useful, but it could be introduced later as a brief reminder, not as the first thing players see in the game.</p>
<div style="display: flex; justify-content: center; margin-top: 20px;">
  <div style="flex: 0 0 auto; max-width: 50%; width: 100%; margin-right: -50px;">
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
      
      
      
    
    
      
      
        
        
          
        
    
        
    
    
        
        
    
    
        
        
        
        
        
        
        
    
    
        
        
          
          
    
          
            
            
          
    
    
          
    
          
          
            
            
            
          
          
          
          
    
        
        
    
        
        
          
          
              <img
                title=""
                loading="lazy"
                decoding="async"
                class="img img-fluid "
                width="498"
                height="323"
                src="/images/posts/post-1/yo-dawg_hu299a65a6aed443c5683d2e5d2b639b09_64002_498x323_resize_q100_lanczos_3.png"
                alt=""
                onerror="this.onerror='null';this.src='\/images\/posts\/post-1\/yo-dawg_hu299a65a6aed443c5683d2e5d2b639b09_64002_498x323_resize_q100_lanczos_3.png'" />
          
        
    
      
      
    
    
    
    
    
    

  </div>
  <div style="flex: 0 0 auto; max-width: 50%; width: 100%; margin-left: -50px;">
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
      
      
      
    
    
      
      
        
        
          
        
    
        
    
    
        
        
    
    
        
        
        
        
        
        
        
    
    
        
        
          
          
          
        
        
    
        
        
          
          
              <img
                title=""
                loading="lazy"
                decoding="async"
                class="img img-fluid "
                width="570"
                height="323"
                src="/images/posts/post-1/szkolenie-ze-szkolenia.gif"
                alt=""
                onerror="this.onerror='null';this.src=''" />
          
        
    
      
      
    
    
    
    
    
    

  </div>
</div>
<h4 id="panels-for-the-most-basic-controls">Panels For The Most Basic Controls</h4>
<p>OK, you got tutored about tutoring. You close this panel and start playing!<br><center><span style="font-size: 30px;"><strong>No.</strong></span></center></p>
<p>This is what you see next:</p>

















  





  
  
  


  
  
    
    
      
    

    


    
    


    
    
    
    
    
    
    


    
    
      
      

      
        
        
      


      

      
      
        
        
        
      
      
      
      

    
    

    
    
      
      
          <img
            title=""
            loading="lazy"
            decoding="async"
            class="img img-fluid img-center"
            width="750"
            height="422"
            src="/images/posts/post-1/camera-and-controls_hu743f4b1abcdb4b1f6c009012e3407a28_1272515_750x422_resize_q100_lanczos_3.png"
            alt=""
            onerror="this.onerror='null';this.src='\/images\/posts\/post-1\/camera-and-controls_hu743f4b1abcdb4b1f6c009012e3407a28_1272515_750x422_resize_q100_lanczos_3.png'" />
      
    

  
  







<p>Do we really need this panel to explain what the left and right analog sticks do? If we were explaining more complicated game mechanics this could be reasonable (although many things can be explained without it).</p>
<p>Instead of a <strong>panel</strong>, imagine just a <strong>prompt</strong>. Let&rsquo;s distinguish these two terms now:</p>
<center>
<table>
<thead>
<tr>
<th style="text-align:center"><span style="font-size: 30px; font-family: Signika;"><strong>Prompt</strong></span></th>
<th style="text-align:center"><span style="font-size: 30px;  font-family: Signika;"><strong>Panel</strong></span></th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">




















  
  
  


  
  
    
    
      
    

    


    
    


    
    
    
    
      
      
    
    
    
    


    
    
      
      

      
        
        
      


      

      
      
        
        
        
      
      
      
      

    
    

    
    
      
      
          <img
            title=""
            loading="lazy"
            decoding="async"
            class="img img-fluid "
            width="577"
            height="215"
            src="/images/posts/post-1/prompt_hue76ce893af5ae66a32ceb19de047d40a_104214_577x215_fill_q100_lanczos_smart1_3.png"
            alt=""
            onerror="this.onerror='null';this.src='\/images\/posts\/post-1\/prompt_hue76ce893af5ae66a32ceb19de047d40a_104214_577x215_fill_q100_lanczos_smart1_3.png'" />
      
    

  
  






</td>
<td style="text-align:center">




















  
  
  


  
  
    
    
      
    

    


    
    


    
    
    
    
    
    
    


    
    
      
      

      


      

      
      
        
        
        
      
      
      
      

    
    

    
    
      
      
          <img
            title=""
            loading="lazy"
            decoding="async"
            class="img img-fluid "
            width="570"
            height="323"
            src="/images/posts/post-1/camera-and-controls_hu743f4b1abcdb4b1f6c009012e3407a28_1272515_570x323_resize_q100_h2_lanczos_3.webp"
            alt=""
            onerror="this.onerror='null';this.src='\/images\/posts\/post-1\/camera-and-controls_hu743f4b1abcdb4b1f6c009012e3407a28_1272515_570x323_resize_q100_lanczos_3.png'" />
      
    

  
  






</td>
</tr>
</tbody>
</table>
</center>
<blockquote><b>Prompt</b> – either non-diegetic or geometric message to the player. It may contain text, icons, or both, with simple and short instructions for controls.</blockquote>
<blockquote><b>Panel</b> – usually a non-diegetic (but sometimes it can be geometric) overlay aimed at explaining more complex aspects of the game. It uses text, images, videos, animations, or a combination of these elements. Because a panel contains more content the player needs to acknowledge, showing it often pauses the game.</blockquote>
<p><strong>The above definitions are my own</strong> (I will use them from now on). However, I have included two terms from the literature in my definitions:</p>
<p>


  



<div class="notice info">
  <div class="notice-head"><svg
        width="20"
        height="20"
        viewBox="0 0 18 20"
        fill="none"
        xmlns="http://www.w3.org/2000/svg">
        <path
          d="M9.16109 0.993016C9.97971 1.03952 10.6611 1.42989 11.0721 2.22339L17.7981 15.8014C18.4502 17.1739 17.4403 19.0208 15.7832 19.0474H2.23859C0.730337 19.0234 -0.507163 17.3108 0.231587 15.7864L7.08321 2.20877C7.21146 1.96502 7.26996 1.89452 7.38059 1.76664C7.82534 1.25102 8.31171 0.975016 9.16109 0.993016ZM9.05046 2.49189C8.79284 2.50464 8.55696 2.64902 8.42834 2.87327C6.06134 7.36539 3.77946 11.9036 1.56546 16.4734C1.36071 16.9328 1.71209 17.5223 2.22621 17.547C6.74871 17.6201 11.2731 17.6201 15.7956 17.547C16.2925 17.523 16.666 16.953 16.459 16.4783C14.2866 11.9093 12.0471 7.37102 9.72171 2.87814C9.58446 2.63402 9.38309 2.48739 9.05046 2.49189Z"
          fill="currentColor" />
        <path
          d="M9.61323 13.2153H8.35773L8.21973 7.04688H9.75723L9.61323 13.2153ZM8.17773 15.1015C8.17773 14.8731 8.25161 14.6841 8.39973 14.5338C8.54823 14.3838 8.75036 14.3084 9.00648 14.3084C9.26298 14.3084 9.46511 14.3838 9.61323 14.5338C9.76136 14.6841 9.83561 14.8731 9.83561 15.1015C9.83561 15.3216 9.76323 15.5057 9.61923 15.6539C9.47486 15.802 9.27086 15.8762 9.00648 15.8762C8.74211 15.8762 8.53811 15.802 8.39373 15.6539C8.24973 15.5057 8.17773 15.3216 8.17773 15.1015Z"
          fill="currentColor" />
      </svg><p>Info</p>
  </div>
  <div class="notice-body"><p><strong>Non-diegetic</strong> elements are UI elements residing in the <strong>non-fictional</strong>, <strong>non-spatial</strong> part of the design space. These are elements presented in an overlay manner.</p></div>
</div>




  



<div class="notice info">
  <div class="notice-head"><svg
        width="20"
        height="20"
        viewBox="0 0 18 20"
        fill="none"
        xmlns="http://www.w3.org/2000/svg">
        <path
          d="M9.16109 0.993016C9.97971 1.03952 10.6611 1.42989 11.0721 2.22339L17.7981 15.8014C18.4502 17.1739 17.4403 19.0208 15.7832 19.0474H2.23859C0.730337 19.0234 -0.507163 17.3108 0.231587 15.7864L7.08321 2.20877C7.21146 1.96502 7.26996 1.89452 7.38059 1.76664C7.82534 1.25102 8.31171 0.975016 9.16109 0.993016ZM9.05046 2.49189C8.79284 2.50464 8.55696 2.64902 8.42834 2.87327C6.06134 7.36539 3.77946 11.9036 1.56546 16.4734C1.36071 16.9328 1.71209 17.5223 2.22621 17.547C6.74871 17.6201 11.2731 17.6201 15.7956 17.547C16.2925 17.523 16.666 16.953 16.459 16.4783C14.2866 11.9093 12.0471 7.37102 9.72171 2.87814C9.58446 2.63402 9.38309 2.48739 9.05046 2.49189Z"
          fill="currentColor" />
        <path
          d="M9.61323 13.2153H8.35773L8.21973 7.04688H9.75723L9.61323 13.2153ZM8.17773 15.1015C8.17773 14.8731 8.25161 14.6841 8.39973 14.5338C8.54823 14.3838 8.75036 14.3084 9.00648 14.3084C9.26298 14.3084 9.46511 14.3838 9.61323 14.5338C9.76136 14.6841 9.83561 14.8731 9.83561 15.1015C9.83561 15.3216 9.76323 15.5057 9.61923 15.6539C9.47486 15.802 9.27086 15.8762 9.00648 15.8762C8.74211 15.8762 8.53811 15.802 8.39373 15.6539C8.24973 15.5057 8.17773 15.3216 8.17773 15.1015Z"
          fill="currentColor" />
      </svg><p>Info</p>
  </div>
  <div class="notice-body"><p><strong>Geometric</strong> elements are UI elements presented in the 3D geometry without being an entity of the fictional game world.</p></div>
</div>
</p>
<p>Source: <a href="https://publications.lib.chalmers.se/records/fulltext/111921.pdf">Beyond the HUD: User Interfaces for Increased Player Immersion in FPS Games: Master of Science Thesis</a></p>
<br>
<p>I believe the controls would still be clear if we swapped overwhelming panels with simple prompts. The camera focuses on The Witcher. A prompt appears:</p>
<center>
<p><span style="font-size: 30px; font-family: Signika;"><strong>Use</strong>     </span> 




















  
  
  


  
  
    
    
      
    

    


    
    


    
    
    
    
    
    
    


    
    
      
      

      
        
        
      


      

      
      
        
        
        
      
      
      
      

    
    

    
    
      
      
          <img
            title=""
            loading="lazy"
            decoding="async"
            class="img img-fluid "
            width="130"
            height="130"
            src="/images/posts/post-1/R2_huab15f85b31ecadd73e996da270f8a05e_93941_130x130_resize_q100_lanczos_3.png"
            alt=""
            onerror="this.onerror='null';this.src='\/images\/posts\/post-1\/R2_huab15f85b31ecadd73e996da270f8a05e_93941_130x130_resize_q100_lanczos_3.png'" />
      
    

  
  







<span style="font-size: 30px; font-family: Signika;">     <strong>to look around.</strong></span></p>
</center>
<p>Along with another one after the player uses the first (right) stick:</p>
<center>
<p><span style="font-size: 30px; font-family: Signika;"><strong>Use</strong>     </span> 




















  
  
  


  
  
    
    
      
    

    


    
    


    
    
    
    
    
    
    


    
    
      
      

      
        
        
      


      

      
      
        
        
        
      
      
      
      

    
    

    
    
      
      
          <img
            title=""
            loading="lazy"
            decoding="async"
            class="img img-fluid "
            width="130"
            height="130"
            src="/images/posts/post-1/L2_hu07a7daca110728b361dbd26b4b61b0a8_89386_130x130_resize_q100_lanczos_3.png"
            alt=""
            onerror="this.onerror='null';this.src='\/images\/posts\/post-1\/L2_hu07a7daca110728b361dbd26b4b61b0a8_89386_130x130_resize_q100_lanczos_3.png'" />
      
    

  
  







<span style="font-size: 30px; font-family: Signika;">     <strong>to move.</strong></span></p>
</center>
<p>When using such simple prompts, it&rsquo;s important that the players <strong>have feedback</strong> and <strong>see the results</strong> of taking action. In our case it&rsquo;s immediate, because the character starts moving and the camera starts rotating.</p>



  



<div class="notice tip">
  <div class="notice-head"><svg
        width="20"
        height="20"
        viewBox="0 0 24 24"
        fill="none"
        xmlns="http://www.w3.org/2000/svg">
        <path
          fillRule="evenodd"
          clipRule="evenodd"
          d="M12 0C18.6274 0 24 5.37258 24 12C24 18.6274 18.6274 24 12 24C5.37258 24 0 18.6274 0 12C0 5.37258 5.37258 0 12 0ZM12 2.4C6.69807 2.4 2.4 6.69807 2.4 12C2.4 17.3019 6.69807 21.6 12 21.6C17.3019 21.6 21.6 17.3019 21.6 12C21.6 6.69807 17.3019 2.4 12 2.4ZM15.9515 7.55147L9.6 13.9029L8.04853 12.3515C7.5799 11.8828 6.8201 11.8828 6.35147 12.3515C5.88284 12.8201 5.88284 13.5799 6.35147 14.0485L8.75147 16.4485C9.2201 16.9172 9.9799 16.9172 10.4485 16.4485L17.6485 9.24853C18.1172 8.7799 18.1172 8.0201 17.6485 7.55147C17.1799 7.08284 16.4201 7.08284 15.9515 7.55147Z"
          fill="currentColor" />
      </svg><p>Tip</p>
  </div>
  <div class="notice-body"><p>When introducing something new, use the simplest understandable explanation.</p></div>
</div>

<p>Often we can simplify this even more using <strong>just the icons</strong> or <strong>animations</strong> showing how to perform an action. This works, if done well, because&hellip;</p>



  



<div class="notice tip">
  <div class="notice-head"><svg
        width="20"
        height="20"
        viewBox="0 0 24 24"
        fill="none"
        xmlns="http://www.w3.org/2000/svg">
        <path
          fillRule="evenodd"
          clipRule="evenodd"
          d="M12 0C18.6274 0 24 5.37258 24 12C24 18.6274 18.6274 24 12 24C5.37258 24 0 18.6274 0 12C0 5.37258 5.37258 0 12 0ZM12 2.4C6.69807 2.4 2.4 6.69807 2.4 12C2.4 17.3019 6.69807 21.6 12 21.6C17.3019 21.6 21.6 17.3019 21.6 12C21.6 6.69807 17.3019 2.4 12 2.4ZM15.9515 7.55147L9.6 13.9029L8.04853 12.3515C7.5799 11.8828 6.8201 11.8828 6.35147 12.3515C5.88284 12.8201 5.88284 13.5799 6.35147 14.0485L8.75147 16.4485C9.2201 16.9172 9.9799 16.9172 10.4485 16.4485L17.6485 9.24853C18.1172 8.7799 18.1172 8.0201 17.6485 7.55147C17.1799 7.08284 16.4201 7.08284 15.9515 7.55147Z"
          fill="currentColor" />
      </svg><p>Tip</p>
  </div>
  <div class="notice-body"><p>If a button icon appears out of nowhere and attracts attention, players press it.</p></div>
</div>

<p>Now you might be thinking that I am talking about absolute trivia but an example of &ldquo;The Witcher 2&rdquo; shows that it&rsquo;s <strong>less obvious</strong> and <strong>more important</strong> that you&rsquo;d think. Camera and movement are just a tip of the iceberg. In section <a href="#case-study-of-guiding-light--seamless-tutorial">&ldquo;Case Study of &ldquo;Guiding Light&rdquo; – Seamless Tutorial&rdquo;</a> I show that even such simple prompts can be effective enough in more complex cases.</p>
<hr>
<p>An in-depth analysis of &ldquo;The Witcher 2&rdquo; tutorial is not a main point of this post, so I&rsquo;ll just briefly point out the rest of important things we can notice:</p>
<h4 id="35-hours-in-25-minutes">35 Hours in 25 Minutes</h4>
<p>According to <a href="https://howlongtobeat.com/game/10268">howlongtobeat.com</a>, &ldquo;The Witcher 2&rdquo; takes around 35 hours to finish during an average playthrough (main story + side quests). And all the most important mechanics are being explained during a <strong>half an hour</strong> tutorial!</p>

















  





  
  
  


  
  
    
    
      
    

    


    
    


    
    
    
    
      
      
    
    
    
    


    
    
      
      

      
        
        
      


      

      
      
        
        
        
      
      
      
      

    
    

    
    
      
      
          <img
            title=""
            loading="lazy"
            decoding="async"
            class="img img-fluid img-center"
            width="1024"
            height="112"
            src="/images/posts/post-1/long_hu5745e8fc28a51dce421f14693c9f7adf_7671_1024x112_fill_q100_lanczos_smart1_3.png"
            alt=""
            onerror="this.onerror='null';this.src='\/images\/posts\/post-1\/long_hu5745e8fc28a51dce421f14693c9f7adf_7671_1024x112_fill_q100_lanczos_smart1_3.png'" />
      
    

  
  







<p>There&rsquo;s a need of explaining alchemy? Why don&rsquo;t we introduce it when it&rsquo;s <strong>needed for the first time</strong>? It could be during preparations before the fight with Kayran in Flotsam (a first major boss you face in the game). And so on with rest of the systems&hellip; I find <strong>providing too much information at once a bad practice</strong>.</p>
<h4 id="inconsistent-with-the-game-world-immersion-breaking">Inconsistent With The Game World, Immersion-Breaking</h4>
<p>I am talking mostly about the combat part. The game speaks directly to players and spawns enemies in front of them out of nowhere. Who are these people we kill? Why do they appear out of nowhere? Players might find it immersion-breaking and building a bad first impression.</p>

















  





  
  
  


  
  
    
    
      
    

    


    
    


    
    
    
    
    
    
    


    
    
      
      

      
        
        
      


      

      
      
        
        
        
      
      
      
      

    
    

    
    
      
      
          <img
            title=""
            loading="lazy"
            decoding="async"
            class="img img-fluid img-center"
            width="750"
            height="422"
            src="/images/posts/post-1/combat-tutorial_hu392135159ec2d7c1765cd4343b2435f5_7005807_750x422_resize_q100_lanczos_3.png"
            alt=""
            onerror="this.onerror='null';this.src='\/images\/posts\/post-1\/combat-tutorial_hu392135159ec2d7c1765cd4343b2435f5_7005807_750x422_resize_q100_lanczos_3.png'" />
      
    

  
  







<center>
<p><em>&ldquo;Oh, yeah, I&rsquo;ve just spawned out of nowhere and I&rsquo;m standing still. Now kill me.&rdquo;</em></p>
</center>
<hr>
<p>To sum up this part with my opinion: In case of &ldquo;The Witcher 2&rdquo; I think that not only was the tutorial <strong>not fun</strong>, but also <strong>moderately effective</strong>. &ldquo;The Witcher 2&rdquo; is often listed among <a href="https://www.youtube.com/watch?v=s7dpDKRFim8&t=89s">the worst game tutorials</a> for a reason. Luckily, an off-putting tutorial was not followed by a bad game, and what&rsquo;s more, CD Projekt RED took a lesson and the process of tutoring players got vastly improved in the next installment of &ldquo;The Witcher&rdquo; series.</p>
<h2 id="the-best-tutorial-is-the-one-you-dont-feel">The Best Tutorial Is The One You Don&rsquo;t Feel</h2>
<p>The <a href="#answering-the-question">Answering The Question</a> section says that the process of tutoring players should be embedded into the game. And this is the moment where <strong>you should forget about tutorials</strong>. You shouldn&rsquo;t even use this word in your game.</p>
<p>Now it&rsquo;s finally time for the &ldquo;What To Do About It&rdquo; part!</p>
<h2 id="case-study-of-guiding-light--seamless-tutorial">Case Study of &ldquo;Guiding Light&rdquo; – Seamless Tutorial</h2>
<h3 id="heading-1"></h3>



  



<div class="notice note">
  <div class="notice-head"><svg
        width="20"
        height="20"
        viewBox="0 0 20 20"
        fill="none"
        xmlns="http://www.w3.org/2000/svg">
        <path
          d="M10 9V14M10 19C5.02944 19 1 14.9706 1 10C1 5.02944 5.02944 1 10 1C14.9706 1 19 5.02944 19 10C19 14.9706 14.9706 19 10 19ZM10.0498 6V6.1L9.9502 6.1002V6H10.0498Z"
          stroke="currentColor"
          stroke-width="2"
          stroke-linecap="round"
          stroke-linejoin="round"></path>
      </svg><p>Note</p>
  </div>
  <div class="notice-body"><p>It will be easier for you to follow the text if you get to know <a href="/portfolio/guiding-light/">&ldquo;Guiding Light&rdquo;</a> first (you can even <strong>download and play it</strong>).</p></div>
</div>



    
    <div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
      <iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" loading="eager" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/ecWnXpiUJ6A?autoplay=0&controls=1&end=0&loop=0&mute=0&start=0" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" title="YouTube video"
      ></iframe>
    </div>

<p>During the development of <a href="https://portfolio/guiding-light/">our game</a>, one of my responsibilities was designing a game &ldquo;tutorial&rdquo;. From the beginning, I knew that a regular tutorial was not an option. Along with our lead designer <a href="https://github.com/MiloszKawczynski">Miłosz</a>, I came up with the idea of a special &ldquo;directing&rdquo; of the first three levels – to guide players without making them feel like it&rsquo;s a tutorial.</p>
<p>But the first element of tutoring appears even earlier&hellip; in the main menu.</p>
<h4 id="you-can-teach-the-player-earlier-than-you-think">You Can Teach The Player Earlier Than You Think</h4>
<p>The first thing we wanted to teach players was that <strong>in our game they control a beam of light with a mouse</strong>. Take a look at our menu:</p>

















  





  
  
  


  
  
    
    
      
    

    


    
    


    
    
    
    
      
      
    
    
    
    


    
    
      
      
      
    
    

    
    
      
      
          <img
            title=""
            loading="lazy"
            decoding="async"
            class="img img-fluid img-center"
            width=""
            height=""
            src="/images/posts/post-1/menu.gif"
            alt=""
            onerror="this.onerror='null';this.src=''" />
      
    

  
  







<p>Fancy, simple, and players got it subconsciously. This was <strong>the simplest possible solution to show this</strong>. And the game hasn&rsquo;t even started yet! Sometimes you don&rsquo;t need a single word, image, or a prompt to highlight something. You should aim to <strong>highlight something really important</strong>. In our case it was controlling the light.</p>



  



<div class="notice tip">
  <div class="notice-head"><svg
        width="20"
        height="20"
        viewBox="0 0 24 24"
        fill="none"
        xmlns="http://www.w3.org/2000/svg">
        <path
          fillRule="evenodd"
          clipRule="evenodd"
          d="M12 0C18.6274 0 24 5.37258 24 12C24 18.6274 18.6274 24 12 24C5.37258 24 0 18.6274 0 12C0 5.37258 5.37258 0 12 0ZM12 2.4C6.69807 2.4 2.4 6.69807 2.4 12C2.4 17.3019 6.69807 21.6 12 21.6C17.3019 21.6 21.6 17.3019 21.6 12C21.6 6.69807 17.3019 2.4 12 2.4ZM15.9515 7.55147L9.6 13.9029L8.04853 12.3515C7.5799 11.8828 6.8201 11.8828 6.35147 12.3515C5.88284 12.8201 5.88284 13.5799 6.35147 14.0485L8.75147 16.4485C9.2201 16.9172 9.9799 16.9172 10.4485 16.4485L17.6485 9.24853C18.1172 8.7799 18.1172 8.0201 17.6485 7.55147C17.1799 7.08284 16.4201 7.08284 15.9515 7.55147Z"
          fill="currentColor" />
      </svg><p>Tip</p>
  </div>
  <div class="notice-body"><p>You can teach the player subconsciously by designing the basics (such as main menu) in a gameplay-supportive way.</p></div>
</div>

<h4 id="keep-the-gameplay-loop-consistent-tutoring-is-not-an-exception">Keep The Gameplay Loop Consistent, Tutoring Is Not An Exception</h4>
<p>&ldquo;Guiding Light&rdquo; consists of <strong>six levels</strong>. This means that gameplay loop is closed inside every level. So a tutorial that is detached from the rest of the levels would be a major inconsistency, and <strong>gameplay loop should be consistent between the levels</strong> (at least in our case we wanted it to be). It is also crucial that introduction of new mechanics needs to happen step by step and arise gradually.</p>
<p><strong>The solution was to make the first three levels introductory</strong> – gradually building the level of complexity. The formula was something like this:</p>
<ul>
<li>Level 1: explaining controls + context + <strong>gameplay loop</strong></li>
<li>Level 2: explaining new type of ship + the first ability + <strong>gameplay loop</strong></li>
<li>Level 3: upgrades + enemies + <strong>gameplay loop</strong></li>
</ul>
<p>In the rest of the levels (4-6), the players are on their own and need to utilize everything they learned during levels 1-3. Most importantly, <strong>the gameplay loop remains consistent</strong>. Players won&rsquo;t feel like they were &ldquo;inside a tutorial&rdquo; previously and are finally in the game starting from level 4.</p>
<p>The <strong>micro loop</strong> in &ldquo;Guiding Light&rdquo; was built around <strong>guiding the ships to the port</strong> and the <strong>macro loop</strong> around <strong>guiding enough food ships to the port so all the penguins are fed</strong> – and the level is completed.</p>



  



<div class="notice tip">
  <div class="notice-head"><svg
        width="20"
        height="20"
        viewBox="0 0 24 24"
        fill="none"
        xmlns="http://www.w3.org/2000/svg">
        <path
          fillRule="evenodd"
          clipRule="evenodd"
          d="M12 0C18.6274 0 24 5.37258 24 12C24 18.6274 18.6274 24 12 24C5.37258 24 0 18.6274 0 12C0 5.37258 5.37258 0 12 0ZM12 2.4C6.69807 2.4 2.4 6.69807 2.4 12C2.4 17.3019 6.69807 21.6 12 21.6C17.3019 21.6 21.6 17.3019 21.6 12C21.6 6.69807 17.3019 2.4 12 2.4ZM15.9515 7.55147L9.6 13.9029L8.04853 12.3515C7.5799 11.8828 6.8201 11.8828 6.35147 12.3515C5.88284 12.8201 5.88284 13.5799 6.35147 14.0485L8.75147 16.4485C9.2201 16.9172 9.9799 16.9172 10.4485 16.4485L17.6485 9.24853C18.1172 8.7799 18.1172 8.0201 17.6485 7.55147C17.1799 7.08284 16.4201 7.08284 15.9515 7.55147Z"
          fill="currentColor" />
      </svg><p>Tip</p>
  </div>
  <div class="notice-body"><p>Regardless of the &ldquo;tutorial&rdquo; form, ensure it somehow mirrors the gameplay loop.</p></div>
</div>

<p>Now let&rsquo;s follow the tutoring process from the beginning:</p>
<h4 id="controls-goal-context">Controls, Goal, Context</h4>
<p>The first thing you see in the game is an old lighthouse keeper who accompanies the player throughout. He communicates using dialogue boxes with subtitles and voiceover. This is better than an instruction panel because <strong>what the player is told matches the game lore</strong> and <strong>a speaking character is multisensory</strong> (text + audio).</p>

















  





  
  
  


  
  
    
    
      
    

    


    
    


    
    
    
    
      
      
    
    
    
    


    
    
      
      

      
        
        
      


      

      
      
        
        
        
      
      
      
      

    
    

    
    
      
      
          <img
            title=""
            loading="lazy"
            decoding="async"
            class="img img-fluid img-center"
            width="1096"
            height="480"
            src="/images/posts/post-1/post-1_hu15aada9750093d492186d7bc841149c3_326162_1096x480_fill_q100_lanczos_smart1_3.png"
            alt=""
            onerror="this.onerror='null';this.src='\/images\/posts\/post-1\/post-1_hu15aada9750093d492186d7bc841149c3_326162_1096x480_fill_q100_lanczos_smart1_3.png'" />
      
    

  
  










  



<div class="notice tip">
  <div class="notice-head"><svg
        width="20"
        height="20"
        viewBox="0 0 24 24"
        fill="none"
        xmlns="http://www.w3.org/2000/svg">
        <path
          fillRule="evenodd"
          clipRule="evenodd"
          d="M12 0C18.6274 0 24 5.37258 24 12C24 18.6274 18.6274 24 12 24C5.37258 24 0 18.6274 0 12C0 5.37258 5.37258 0 12 0ZM12 2.4C6.69807 2.4 2.4 6.69807 2.4 12C2.4 17.3019 6.69807 21.6 12 21.6C17.3019 21.6 21.6 17.3019 21.6 12C21.6 6.69807 17.3019 2.4 12 2.4ZM15.9515 7.55147L9.6 13.9029L8.04853 12.3515C7.5799 11.8828 6.8201 11.8828 6.35147 12.3515C5.88284 12.8201 5.88284 13.5799 6.35147 14.0485L8.75147 16.4485C9.2201 16.9172 9.9799 16.9172 10.4485 16.4485L17.6485 9.24853C18.1172 8.7799 18.1172 8.0201 17.6485 7.55147C17.1799 7.08284 16.4201 7.08284 15.9515 7.55147Z"
          fill="currentColor" />
      </svg><p>Tip</p>
  </div>
  <div class="notice-body"><p>People absorb multisensory information better. A short call to action with text and voiceover will work better than a panel with raw text information.</p></div>
</div>

<p>There is also a floating prompt with mouse icon <strong>(left mouse button highlighted)</strong> to indicate that the player <strong>needs to press it</strong> for something to happen:</p>

















  





  
  
  


  
  
    
    
      
    

    


    
    


    
    
    
    
      
      
    
    
    
    


    
    
      
      
      
    
    

    
    
      
      
          <img
            title=""
            loading="lazy"
            decoding="async"
            class="img img-fluid img-center"
            width=""
            height=""
            src="/images/posts/post-1/mouse.gif"
            alt=""
            onerror="this.onerror='null';this.src=''" />
      
    

  
  







<p>What the players learn from the voiceline: <strong>the goal and the context of the game.</strong>
<br>
<br>
<em>What do I need to do?</em>  I need to guide the ships.
<br>
<em>But why?</em>  Ah, because the weather is awful.
<br>
<br>
The <strong>Left Mouse Button</strong> is always used to start the level by turning the light on. <strong>From the main menu, players already know that the mouse is used to move the beam</strong>. There are no direct instructions or mentions of illuminating the ship – everything is embedded in the game&rsquo;s lore. Our playtests showed that <strong>players easily figured out how to illuminate the way in front of the ships</strong>, and therefore, control them.</p>
<p>The next element of tutoring is <strong>embedded into the level design</strong>. It&rsquo;s crucial for players to &ldquo;feel&rdquo; the ships at this point. The most important things they need to learn are how to turn the ships, slow them down, and make them accelerate.</p>
<p>The shape of the canal <strong>requires players to make a turn</strong>. Therefore, they need to successfully turn to reach the destination – the port. This leads to an important principle of introducing new gameplay mechanics:</p>



  



<div class="notice tip">
  <div class="notice-head"><svg
        width="20"
        height="20"
        viewBox="0 0 24 24"
        fill="none"
        xmlns="http://www.w3.org/2000/svg">
        <path
          fillRule="evenodd"
          clipRule="evenodd"
          d="M12 0C18.6274 0 24 5.37258 24 12C24 18.6274 18.6274 24 12 24C5.37258 24 0 18.6274 0 12C0 5.37258 5.37258 0 12 0ZM12 2.4C6.69807 2.4 2.4 6.69807 2.4 12C2.4 17.3019 6.69807 21.6 12 21.6C17.3019 21.6 21.6 17.3019 21.6 12C21.6 6.69807 17.3019 2.4 12 2.4ZM15.9515 7.55147L9.6 13.9029L8.04853 12.3515C7.5799 11.8828 6.8201 11.8828 6.35147 12.3515C5.88284 12.8201 5.88284 13.5799 6.35147 14.0485L8.75147 16.4485C9.2201 16.9172 9.9799 16.9172 10.4485 16.4485L17.6485 9.24853C18.1172 8.7799 18.1172 8.0201 17.6485 7.55147C17.1799 7.08284 16.4201 7.08284 15.9515 7.55147Z"
          fill="currentColor" />
      </svg><p>Tip</p>
  </div>
  <div class="notice-body"><p>If you give the players something new, lock them with this new thing, and make them use it to get out.</p></div>
</div>

<p>I have seen it in many games. Let&rsquo;s take <a href="https://store.steampowered.com/app/1139900/Ghostrunner/?l=english">&ldquo;Ghostrunner&rdquo;</a>, a hardcore FPP platformer. This game typically requires you to successfully perform <strong>new moves you learn</strong> to progress further. In my opinion, &ldquo;Ghostrunner&rdquo; has excellent seamless tutoring (though not <a href="https://youtu.be/8FpigqfcvlM?t=403">the best</a>! Be sure to check <a href="#sources--additional-materials">Sources &amp; Additional Materials</a>).</p>
<p>In &ldquo;Guiding Light&rdquo; we ensure that <strong>you learn how to control the ship when you pass the first canal</strong> – curved enough to require you to turn and wide enough to <strong>give you a peaceful space to learn</strong>. And even when the ship gets crashed, a new one flows in quickly.</p>

















  





  
  
  


  
  
    
    
      
    

    


    
    


    
    
    
    
      
      
    
    
    
    


    
    
      
      
      
    
    

    
    
      
      
          <img
            title=""
            loading="lazy"
            decoding="async"
            class="img img-fluid img-center"
            width=""
            height=""
            src="/images/posts/post-1/canal.gif"
            alt=""
            onerror="this.onerror='null';this.src=''" />
      
    

  
  







<p>When this ship arrives to the port, the old lighthouse keeper calls again:</p>

















  





  
  
  


  
  
    
    
      
    

    


    
    


    
    
    
    
      
      
    
    
    
    


    
    
      
      

      


      

      
      
        
        
        
      
      
      
      

    
    

    
    
      
      
          <img
            title=""
            loading="lazy"
            decoding="async"
            class="img img-fluid img-center"
            width="600"
            height="337"
            src="/images/posts/post-1/the-ship_hu857398c2a539615a2861f0fa685e9e33_295510_600x337_fill_q100_h2_lanczos_smart1_3.webp"
            alt=""
            onerror="this.onerror='null';this.src='\/images\/posts\/post-1\/the-ship_hu857398c2a539615a2861f0fa685e9e33_295510_600x337_fill_q100_lanczos_smart1_3.png'" />
      
    

  
  







<p>There are multiple things happening:</p>
<ul>
<li><strong>the voiceline:</strong> indicates that <strong>the ship with food has arrived</strong> and that <strong>the penguin can be fed</strong></li>
<li><strong>the space button prompt:</strong> shows that <strong>we should press this button</strong></li>
<li><strong>the blinking ship</strong>: attracts attention and highlights that we should <strong>interact with it in some way</strong></li>
</ul>



  



<div class="notice note">
  <div class="notice-head"><svg
        width="20"
        height="20"
        viewBox="0 0 20 20"
        fill="none"
        xmlns="http://www.w3.org/2000/svg">
        <path
          d="M10 9V14M10 19C5.02944 19 1 14.9706 1 10C1 5.02944 5.02944 1 10 1C14.9706 1 19 5.02944 19 10C19 14.9706 14.9706 19 10 19ZM10.0498 6V6.1L9.9502 6.1002V6H10.0498Z"
          stroke="currentColor"
          stroke-width="2"
          stroke-linecap="round"
          stroke-linejoin="round"></path>
      </svg><p>Note</p>
  </div>
  <div class="notice-body"><p><p>After we press space, we leave the lighthouse and are able to control the hovercraft with WASD keys:</p>
<center>
  <img src="/images/posts/post-1/wsad.gif" position="center" height="400" width="400" command="fill" option="q100" class="img-fluid" webp="true">
</center></p></div>
</div>

<p>Let&rsquo;s present these pieces of information as <strong>&ldquo;dots&rdquo;</strong> and let the players connect them. If this is delivered clearly, the players can discover the connections between pieces of information on their own easily.</p>

















  





  
  
  


  
  
    
    
      
    

    


    
    


    
    
    
    
      
      
    
    
    
    


    
    
      
      

      


      

      
      
        
        
        
      
      
      
      

    
    

    
    
      
      
          <img
            title=""
            loading="lazy"
            decoding="async"
            class="img img-fluid img-center"
            width="1152"
            height="648"
            src="/images/posts/post-1/dots_huc1b8b14093ef30713e1a344e028cc768_40256_1152x648_fill_q100_h2_lanczos_smart1_3.webp"
            alt=""
            onerror="this.onerror='null';this.src='\/images\/posts\/post-1\/dots_huc1b8b14093ef30713e1a344e028cc768_40256_1152x648_fill_q100_lanczos_smart1_3.png'" />
      
    

  
  







<p>Playtests showed that it wasn&rsquo;t hard for the players to come up with the connections:</p>

















  





  
  
  


  
  
    
    
      
    

    


    
    


    
    
    
    
      
      
    
    
    
    


    
    
      
      

      


      

      
      
        
        
        
      
      
      
      

    
    

    
    
      
      
          <img
            title=""
            loading="lazy"
            decoding="async"
            class="img img-fluid img-center"
            width="1152"
            height="648"
            src="/images/posts/post-1/lines_hu0f0427d91d590b4cc706757d0475f122_85431_1152x648_fill_q100_h2_lanczos_smart1_3.webp"
            alt=""
            onerror="this.onerror='null';this.src='\/images\/posts\/post-1\/lines_hu0f0427d91d590b4cc706757d0475f122_85431_1152x648_fill_q100_lanczos_smart1_3.png'" />
      
    

  
  







<p>If you <strong>build enough context</strong> and present what needs to be done clearly and in a peaceful environment, players will eventually do that. <strong>And you will preserve a minor &ldquo;Eureka!&rdquo; feeling.</strong></p>



  



<div class="notice tip">
  <div class="notice-head"><svg
        width="20"
        height="20"
        viewBox="0 0 24 24"
        fill="none"
        xmlns="http://www.w3.org/2000/svg">
        <path
          fillRule="evenodd"
          clipRule="evenodd"
          d="M12 0C18.6274 0 24 5.37258 24 12C24 18.6274 18.6274 24 12 24C5.37258 24 0 18.6274 0 12C0 5.37258 5.37258 0 12 0ZM12 2.4C6.69807 2.4 2.4 6.69807 2.4 12C2.4 17.3019 6.69807 21.6 12 21.6C17.3019 21.6 21.6 17.3019 21.6 12C21.6 6.69807 17.3019 2.4 12 2.4ZM15.9515 7.55147L9.6 13.9029L8.04853 12.3515C7.5799 11.8828 6.8201 11.8828 6.35147 12.3515C5.88284 12.8201 5.88284 13.5799 6.35147 14.0485L8.75147 16.4485C9.2201 16.9172 9.9799 16.9172 10.4485 16.4485L17.6485 9.24853C18.1172 8.7799 18.1172 8.0201 17.6485 7.55147C17.1799 7.08284 16.4201 7.08284 15.9515 7.55147Z"
          fill="currentColor" />
      </svg><p>Tip</p>
  </div>
  <div class="notice-body"><p>Instead of giving step-by-step instructions, show players what needs to be done with enough context. This way, they can quickly figure it out on their own.</p></div>
</div>

<p>And to achieve this we used:</p>
<ul>
<li>a voiceline with text and audio</li>
<li>button prompts</li>
<li>a blinking effect on a ship</li>
</ul>
<p>In case of &ldquo;Guiding Light&rdquo; <strong>it wasn&rsquo;t like &ldquo;solving a puzzle&rdquo;</strong>. Players didn&rsquo;t need to stop for a while to figure out what to do. It was <strong>natural</strong> and <strong>this was our desired experience</strong>. At the end of the level, you see <strong>a fish being thrown to the penguin</strong>, which then happily jumps into the water. This provides <strong>instant feedback</strong> and serves as a <strong>reward</strong>, indicating that we performed as the game intended.</p>
<h4 id="explaining-more-complex-systems">Explaining More Complex Systems</h4>
<p>&ldquo;Guiding Light&rdquo; has also <strong>two more introductory levels</strong>. Now I&rsquo;ll show you that <strong>the player is taught with mostly what I&rsquo;ve already covered</strong> even in more complex cases! There are more gameplay aspects that need to be explained:</p>
<ul>
<li><strong>a new type of ship: with fuel</strong> – this is a sort of a &ldquo;currency&rdquo; that players can collect an spend either on upgrading the lighthouse or buying the &ldquo;flash&rdquo; ability</li>
<li><strong>upgrading the lighthouse</strong> – by spending the packages in the workshop, we can make the light beam brigther and wider to make the ships more responsive</li>
<li><strong>the flash</strong> – by spending the packages in the generator, we can obtain an ability to stop all the ships in the canal for a while</li>
<li><strong>the pirates</strong> – they attack all the friendly ships!</li>
</ul>
<center>
<table>
<thead>
<tr>
<th style="text-align:center"><span style="font-size: 30px; font-family: Signika;"><strong>The &ldquo;Flash&rdquo; Ability</strong></span></th>
<th style="text-align:center"><span style="font-size: 30px;  font-family: Signika;"><strong>A Pirate Ship</strong></span></th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">




















  
  
  


  
  
    
    
      
    

    


    
    


    
    
    
    
    
    
    


    
    
      
      
      
    
    

    
    
      
      
          <img
            title=""
            loading="lazy"
            decoding="async"
            class="img img-fluid "
            width="570"
            height="323"
            src="/images/posts/post-1/flash.gif"
            alt=""
            onerror="this.onerror='null';this.src=''" />
      
    

  
  






</td>
<td style="text-align:center">




















  
  
  


  
  
    
    
      
    

    


    
    


    
    
    
    
    
    
    


    
    
      
      
      
    
    

    
    
      
      
          <img
            title=""
            loading="lazy"
            decoding="async"
            class="img img-fluid "
            width="570"
            height="323"
            src="/images/posts/post-1/pirates.gif"
            alt=""
            onerror="this.onerror='null';this.src=''" />
      
    

  
  






</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th style="text-align:center"><span style="font-size: 30px; font-family: Signika;"><strong>A Ship With Fuel</strong></span></th>
<th style="text-align:center"><span style="font-size: 30px;  font-family: Signika;"><strong>Upgrading The Lighthouse</strong></span></th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">




















  
  
  


  
  
    
    
      
    

    


    
    


    
    
    
    
    
    
    


    
    
      
      
      
    
    

    
    
      
      
          <img
            title=""
            loading="lazy"
            decoding="async"
            class="img img-fluid "
            width="400"
            height="400"
            src="/images/posts/post-1/tools.gif"
            alt=""
            onerror="this.onerror='null';this.src=''" />
      
    

  
  






</td>
<td style="text-align:center">




















  
  
  


  
  
    
    
      
    

    


    
    


    
    
    
    
    
    
    


    
    
      
      
      
    
    

    
    
      
      
          <img
            title=""
            loading="lazy"
            decoding="async"
            class="img img-fluid "
            width="400"
            height="400"
            src="/images/posts/post-1/upgrade.gif"
            alt=""
            onerror="this.onerror='null';this.src=''" />
      
    

  
  






</td>
</tr>
</tbody>
</table>
</center>
<p><strong>Firstly, we need to explain a new type of ship</strong> that we must guide to the port, similarly to the food ship. <strong>However</strong>, with this ship, we <strong>obtain and keep the package</strong> as &ldquo;currency&rdquo;.<br><strong>To teach this, we use:</strong></p>
<ul>
<li>voiceline (text + audio)</li>
<li>prompts</li>
<li>blinking effect</li>
</ul>
<p>This is how the situation looks after it arrives to the port:</p>

















  





  
  
  


  
  
    
    
      
    

    


    
    


    
    
    
    
    
    
    


    
    
      
      

      


      

      
      
        
        
        
      
      
      
      

    
    

    
    
      
      
          <img
            title=""
            loading="lazy"
            decoding="async"
            class="img img-fluid img-center"
            width="700"
            height="394"
            src="/images/posts/post-1/take-the-package_huabb632dfebb6ee84814e3b7f056a8a49_889140_700x394_fill_q100_h2_lanczos_smart1_3.webp"
            alt=""
            onerror="this.onerror='null';this.src='\/images\/posts\/post-1\/take-the-package_huabb632dfebb6ee84814e3b7f056a8a49_889140_700x394_fill_q100_lanczos_smart1_3.png'" />
      
    

  
  







<p>We hear <em>&ldquo;Now go, take the package!&rdquo;</em>.  As this is accompanied by space button prompt, and the players have already taken one package in the previous level, it is easy for them to figure out what to do. After that we use another voiceline together with a blinking effect on the generator that is needed to obtain the &ldquo;flash&rdquo; ability:</p>

















  





  
  
  


  
  
    
    
      
    

    


    
    


    
    
    
    
    
    
    


    
    
      
      

      


      

      
      
        
        
        
      
      
      
      

    
    

    
    
      
      
          <img
            title=""
            loading="lazy"
            decoding="async"
            class="img img-fluid img-center"
            width="700"
            height="394"
            src="/images/posts/post-1/start-the-generator_hu4f8c836e504fbf7206ed5bc3f781931a_855423_700x394_fill_q100_h2_lanczos_smart1_3.webp"
            alt=""
            onerror="this.onerror='null';this.src='\/images\/posts\/post-1\/start-the-generator_hu4f8c836e504fbf7206ed5bc3f781931a_855423_700x394_fill_q100_lanczos_smart1_3.png'" />
      
    

  
  







<p>To complete this level while maintaining the gameplay loop, we need to feed the penguins by guiding a food ship. This time, however, <strong>we face a huge ship</strong>! The flash ability is crucial here – it allows us to stop and turn the large ship. <strong>But how do we learn it?</strong></p>
<p>We, the developers, again aim to <strong>&ldquo;lock the players with a new mechanic and make them use it to progress&rdquo;</strong>. The upper part of the canal is so narrow and curved that it <strong>forces</strong> players to use the new ability to stop the ship. <strong>To assist them, we provide a QTE-like prompt:</strong></p>

















  





  
  
  


  
  
    
    
      
    

    


    
    


    
    
    
    
      
      
    
    
    
    


    
    
      
      
      
    
    

    
    
      
      
          <img
            title=""
            loading="lazy"
            decoding="async"
            class="img img-fluid img-center"
            width=""
            height=""
            src="/images/posts/post-1/now.gif"
            alt=""
            onerror="this.onerror='null';this.src=''" />
      
    

  
  







<p>After they succeed, <strong>we provide feedback</strong> with a voiceline:</p>

















  





  
  
  


  
  
    
    
      
    

    


    
    


    
    
    
    
      
      
    
    
    
    


    
    
      
      

      


      

      
      
        
        
        
      
      
      
      

    
    

    
    
      
      
          <img
            title=""
            loading="lazy"
            decoding="async"
            class="img img-fluid img-center"
            width="834"
            height="257"
            src="/images/posts/post-1/haha_hu115911110c2bd1d619e60c958c743a5e_239174_834x257_fill_q100_h2_lanczos_smart1_3.webp"
            alt=""
            onerror="this.onerror='null';this.src='\/images\/posts\/post-1\/haha_hu115911110c2bd1d619e60c958c743a5e_239174_834x257_fill_q100_lanczos_smart1_3.png'" />
      
    

  
  







<p>The level is finished after we guide this ship to the port and feed the penguins (consistent gameplay loop).</p>
<hr>
<p>The same techniques are used in the third introductory level to explain <strong>upgrading the lighthouse</strong>. However, another gameplay aspect – pirates – provides an opportunity for a different tutoring technique. This technique is used not necessarily to teach, but to <strong>make tutoring more enjoyable:</strong></p>
<h4 id="leaving-a-surprise-to-discover">Leaving A Surprise To Discover</h4>
<p>When pirates appear in the third level, this is what the players are told:</p>

















  





  
  
  


  
  
    
    
      
    

    


    
    


    
    
    
    
      
      
    
    
    
    


    
    
      
      

      


      

      
      
        
        
        
      
      
      
      

    
    

    
    
      
      
          <img
            title=""
            loading="lazy"
            decoding="async"
            class="img img-fluid img-center"
            width="849"
            height="273"
            src="/images/posts/post-1/pesky_hudfc16681d15d21cbb9949680e9457f24_321399_849x273_fill_q100_h2_lanczos_smart1_3.webp"
            alt=""
            onerror="this.onerror='null';this.src='\/images\/posts\/post-1\/pesky_hudfc16681d15d21cbb9949680e9457f24_321399_849x273_fill_q100_lanczos_smart1_3.png'" />
      
    

  
  







<p>Note that the players are not being told <strong>how to destroy the pirate ships</strong>. The most intuitive way of doing this is&hellip; guess what – guiding the pirates onto ice floes.</p>

















  





  
  
  


  
  
    
    
      
    

    


    
    


    
    
    
    
      
      
    
    
    
    


    
    
      
      
      
    
    

    
    
      
      
          <img
            title=""
            loading="lazy"
            decoding="async"
            class="img img-fluid img-center"
            width=""
            height=""
            src="/images/posts/post-1/crash-1.gif"
            alt=""
            onerror="this.onerror='null';this.src=''" />
      
    

  
  







<p>But players can leave the lighthouse! Have you considered what might happen if we bump into ships with our hovercraft? <strong>This:</strong></p>

















  





  
  
  


  
  
    
    
      
    

    


    
    


    
    
    
    
      
      
    
    
    
    


    
    
      
      
      
    
    

    
    
      
      
          <img
            title=""
            loading="lazy"
            decoding="async"
            class="img img-fluid img-center"
            width=""
            height=""
            src="/images/posts/post-1/crash-2.gif"
            alt=""
            onerror="this.onerror='null';this.src=''" />
      
    

  
  







<p><strong>Why we decided to keep it a secret:</strong></p>
<ul>
<li><strong>Not everyone will discover it:</strong> While some may see it as a drawback, this creates a slightly different experience for each player, which we can allow. It’s a minor detail that doesn’t impact victory. Watching someone else play and discovering this feature often leads to reactions like, <em>&ldquo;Woah! You can do that?!&rdquo;</em></li>
<li><strong>It creates an &ldquo;Eureka!&rdquo; moment:</strong> Players might have an <em>&ldquo;Aha!&rdquo;</em> moment when they realize, <em>&ldquo;I can bump into ships too!&rdquo;</em></li>
<li><strong>Unexpected and funny situations:</strong> While bumping into <strong>a friendly ship</strong> might not be ideal, it&rsquo;s <strong>fair</strong>. During playtests, one player left the lighthouse early in the second level and accidentally destroyed a food ship. He laughed and said, <em>&ldquo;I literally crashed into it, what did I expect?&quot;</em>  This is similar to players testing if fire causes damage in a game, and being surprised when it does (it does in 95% of cases 😉).</li>
</ul>
<p>However, <strong>never</strong> hide <strong>crucial</strong> information from players. For example, keeping secret which buttons to press to move would <strong>not</strong> be fun.</p>



  



<div class="notice tip">
  <div class="notice-head"><svg
        width="20"
        height="20"
        viewBox="0 0 24 24"
        fill="none"
        xmlns="http://www.w3.org/2000/svg">
        <path
          fillRule="evenodd"
          clipRule="evenodd"
          d="M12 0C18.6274 0 24 5.37258 24 12C24 18.6274 18.6274 24 12 24C5.37258 24 0 18.6274 0 12C0 5.37258 5.37258 0 12 0ZM12 2.4C6.69807 2.4 2.4 6.69807 2.4 12C2.4 17.3019 6.69807 21.6 12 21.6C17.3019 21.6 21.6 17.3019 21.6 12C21.6 6.69807 17.3019 2.4 12 2.4ZM15.9515 7.55147L9.6 13.9029L8.04853 12.3515C7.5799 11.8828 6.8201 11.8828 6.35147 12.3515C5.88284 12.8201 5.88284 13.5799 6.35147 14.0485L8.75147 16.4485C9.2201 16.9172 9.9799 16.9172 10.4485 16.4485L17.6485 9.24853C18.1172 8.7799 18.1172 8.0201 17.6485 7.55147C17.1799 7.08284 16.4201 7.08284 15.9515 7.55147Z"
          fill="currentColor" />
      </svg><p>Tip</p>
  </div>
  <div class="notice-body"><p>Come up with a minor thing that can be a secret to discover. This thing should be optional for players to perform well, but satisfactory enough when they discover it.</p></div>
</div>

<h2 id="summary">Summary</h2>
<p>I hope that now you can see a difference between in-your-face tutorials that overwhelm players and seamless tutorials that are fun, lore-accurate and more player-friendly. To make a cheat-sheet for designing a seamless tutorial in your next game, I gathered all the tips and they are presented below:</p>



  



<div class="notice tip Summary">
  <div class="notice-head"><svg
        width="20"
        height="20"
        viewBox="0 0 20 20"
        fill="none"
        xmlns="http://www.w3.org/2000/svg">
        <path
          d="M10 9V14M10 19C5.02944 19 1 14.9706 1 10C1 5.02944 5.02944 1 10 1C14.9706 1 19 5.02944 19 10C19 14.9706 14.9706 19 10 19ZM10.0498 6V6.1L9.9502 6.1002V6H10.0498Z"
          stroke="currentColor"
          stroke-width="2"
          stroke-linecap="round"
          stroke-linejoin="round"></path>
      </svg><p>Tip Summary</p>
  </div>
  <div class="notice-body"><p><ul>
<li>When introducing something new, use the simplest understandable explanation.</li>
<li>If a button icon appears out of nowhere and attracts attention, players press it.</li>
<li>You can teach the player subconsciously by designing the basics (such as main menu) in a gameplay-supportive way.</li>
<li>Regardless of the &ldquo;tutorial&rdquo; form, ensure it somehow mirrors the gameplay loop.</li>
<li>People absorb multisensory information better. A short call to action with text and voiceover will work better than a panel with raw text information.</li>
<li>If you give the players something new, lock them with this new thing, and make them use it to get out.</li>
<li>Instead of giving step-by-step instructions, show players what needs to be done with enough context. This way, they can quickly figure it out on their own.</li>
<li>Come up with a minor thing that can be a secret to discover. This thing should be optional for players to perform well, but satisfactory enough when they discover it.</li>
</ul>
</p></div>
</div>

<p><strong>Am I talking nonsense?</strong> While this post reflects my personal opinion, I believe I’ve explained many techniques that are <strong>good practices</strong>. If they weren’t, &ldquo;Guiding Light&rdquo; likely wouldn’t be playable or awarded. I want to thank my teachers: <a href="https://www.linkedin.com/in/jaroslawandrzejczak/">Jarosław Andrzejczak, PhD</a>, and <a href="https://ganszyniec.com">Artur Ganszyniec</a>, whose work has vastly influenced my approach to game production and design. I’m also glad they appreciated the tutoring in &ldquo;Guiding Light&rdquo; too! 😊</p>
<h2 id="sources--additional-materials">Sources &amp; Additional Materials</h2>
<ul>
<li><a href="https://youtu.be/8FpigqfcvlM?t=403">&ldquo;Sequelitis - Mega Man Classic vs. Mega Man X&rdquo;</a> – an analysis of &ldquo;Mega Man X&rdquo; tutoring – the most seamless tutorial you will ever see. <strong>Must watch!</strong></li>
<li><a href="https://www.youtube.com/watch?v=s7dpDKRFim8">&ldquo;10 Terrible Tutorials That Almost Killed Video Games&rdquo;</a></li>
<li><a href="https://publications.lib.chalmers.se/records/fulltext/111921.pdf">Beyond the HUD: User Interfaces for Increased Player Immersion in FPS Games: Master of Science Thesis</a></li>
</ul>
]]></description>
                

                <guid isPermaLink="false">tag:,2024-07-30:/blog/post-1/</guid>

                
                    <link>/blog/post-1/</link>
                

                
                    <pubDate>Tue, 30 Jul 2024 16:58:35 CEST</pubDate>
                

                
                    <title>Why Tutorial in Your Game Sucks (And What To Do About It)</title>
                
            </item>
        
    </channel>
</rss>
